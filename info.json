{
  "symbols": [
    {
      "name": "ol.animation.bounce",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/animation.js",
      "provides": [
        "ol.animation"
      ]
    },
    {
      "name": "ol.animation.pan",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/animation.js",
      "provides": [
        "ol.animation"
      ]
    },
    {
      "name": "ol.animation.rotate",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/animation.js",
      "provides": [
        "ol.animation"
      ]
    },
    {
      "name": "ol.animation.zoom",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/animation.js",
      "provides": [
        "ol.animation"
      ]
    },
    {
      "name": "ol.Attribution",
      "kind": "class",
      "description": "An attribution for a layer source.\n\nExample:\n\n    source: new ol.source.OSM({\n      attributions: [\n        new ol.Attribution({\n          html: 'All maps &copy; ' +\n              '<a href=\"http://www.opencyclemap.org/\">OpenCycleMap</a>'\n        }),\n        ol.source.OSM.DATA_ATTRIBUTION\n      ],\n    ..",
      "path": "/home/nd0ut/workspace/ol3/src/ol/attribution.js",
      "provides": [
        "ol.Attribution"
      ]
    },
    {
      "name": "ol.BrowserFeature.DEVICE_PIXEL_RATIO",
      "kind": "constant",
      "description": "The ratio between physical pixels and device-independent pixels\n(dips) on the device (`window.devicePixelRatio`).",
      "path": "/home/nd0ut/workspace/ol3/src/ol/browserfeature.js",
      "provides": [
        "ol.BrowserFeature"
      ]
    },
    {
      "name": "ol.BrowserFeature.HAS_CANVAS",
      "kind": "constant",
      "description": "True if browser supports Canvas.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/browserfeature.js",
      "provides": [
        "ol.BrowserFeature"
      ]
    },
    {
      "name": "ol.BrowserFeature.HAS_DEVICE_ORIENTATION",
      "kind": "constant",
      "description": "Indicates if DeviceOrientation is supported in the user's browser.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/browserfeature.js",
      "provides": [
        "ol.BrowserFeature"
      ]
    },
    {
      "name": "ol.BrowserFeature.HAS_GEOLOCATION",
      "kind": "constant",
      "description": "Is HTML5 geolocation supported in the current browser?",
      "path": "/home/nd0ut/workspace/ol3/src/ol/browserfeature.js",
      "provides": [
        "ol.BrowserFeature"
      ]
    },
    {
      "name": "ol.BrowserFeature.HAS_TOUCH",
      "kind": "constant",
      "description": "True if browser supports touch events.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/browserfeature.js",
      "provides": [
        "ol.BrowserFeature"
      ]
    },
    {
      "name": "ol.BrowserFeature.HAS_WEBGL",
      "kind": "constant",
      "description": "True if browser supports WebGL.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/browserfeature.js",
      "provides": [
        "ol.BrowserFeature"
      ]
    },
    {
      "name": "ol.CollectionEvent#element",
      "kind": "member",
      "description": "The element that is added to or removed from the collection.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/collection.js",
      "provides": [
        "ol.Collection",
        "ol.CollectionEvent",
        "ol.CollectionEventType"
      ]
    },
    {
      "name": "ol.Collection",
      "kind": "class",
      "description": "An expanded version of standard JS Array, adding convenience methods for\nmanipulation. Add and remove changes to the Collection trigger a Collection\nevent. Note that this does not cover changes to the objects _within_ the\nCollection; they trigger events on the appropriate object, not on the\nCollection as a whole.\n\nBecause a Collection is itself an {@link ol.Object}, it can be bound to any\nother Object or Collection such that a change in one will automatically be\nreflected in the other.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/collection.js",
      "provides": [
        "ol.Collection",
        "ol.CollectionEvent",
        "ol.CollectionEventType"
      ]
    },
    {
      "name": "ol.Collection#clear",
      "kind": "function",
      "description": "Remove all elements from the collection.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/collection.js",
      "provides": [
        "ol.Collection",
        "ol.CollectionEvent",
        "ol.CollectionEventType"
      ]
    },
    {
      "name": "ol.Collection#extend",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/collection.js",
      "provides": [
        "ol.Collection",
        "ol.CollectionEvent",
        "ol.CollectionEventType"
      ]
    },
    {
      "name": "ol.Collection#forEach",
      "kind": "function",
      "description": "Iterate over each element, calling the provided callback.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/collection.js",
      "provides": [
        "ol.Collection",
        "ol.CollectionEvent",
        "ol.CollectionEventType"
      ]
    },
    {
      "name": "ol.Collection#getArray",
      "kind": "function",
      "description": "Get a reference to the underlying Array object. Warning: if the array\nis mutated, no events will be dispatched by the collection, and the\ncollection's \"length\" property won't be in sync with the actual length\nof the array.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/collection.js",
      "provides": [
        "ol.Collection",
        "ol.CollectionEvent",
        "ol.CollectionEventType"
      ]
    },
    {
      "name": "ol.Collection#item",
      "kind": "function",
      "description": "Get the element at the provided index.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/collection.js",
      "provides": [
        "ol.Collection",
        "ol.CollectionEvent",
        "ol.CollectionEventType"
      ]
    },
    {
      "name": "ol.Collection#getLength",
      "kind": "function",
      "description": "Get the length of this collection.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/collection.js",
      "provides": [
        "ol.Collection",
        "ol.CollectionEvent",
        "ol.CollectionEventType"
      ]
    },
    {
      "name": "ol.Collection#insertAt",
      "kind": "function",
      "description": "Insert an element at the provided index.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/collection.js",
      "provides": [
        "ol.Collection",
        "ol.CollectionEvent",
        "ol.CollectionEventType"
      ]
    },
    {
      "name": "ol.Collection#pop",
      "kind": "function",
      "description": "Remove the last element of the collection.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/collection.js",
      "provides": [
        "ol.Collection",
        "ol.CollectionEvent",
        "ol.CollectionEventType"
      ]
    },
    {
      "name": "ol.Collection#push",
      "kind": "function",
      "description": "Insert the provided element at the end of the collection.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/collection.js",
      "provides": [
        "ol.Collection",
        "ol.CollectionEvent",
        "ol.CollectionEventType"
      ]
    },
    {
      "name": "ol.Collection#remove",
      "kind": "function",
      "description": "Removes the first occurence of elem from the collection.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/collection.js",
      "provides": [
        "ol.Collection",
        "ol.CollectionEvent",
        "ol.CollectionEventType"
      ]
    },
    {
      "name": "ol.Collection#removeAt",
      "kind": "function",
      "description": "Remove the element at the provided index.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/collection.js",
      "provides": [
        "ol.Collection",
        "ol.CollectionEvent",
        "ol.CollectionEventType"
      ]
    },
    {
      "name": "ol.Collection#setAt",
      "kind": "function",
      "description": "Set the element at the provided index.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/collection.js",
      "provides": [
        "ol.Collection",
        "ol.CollectionEvent",
        "ol.CollectionEventType"
      ]
    },
    {
      "name": "ol.coordinate.add",
      "kind": "function",
      "description": "Add `delta` to `coordinate`. `coordinate` is modified in place and returned\nby the function.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/coordinate.js",
      "provides": [
        "ol.Coordinate",
        "ol.CoordinateArray",
        "ol.CoordinateFormatType",
        "ol.coordinate"
      ]
    },
    {
      "name": "ol.coordinate.createStringXY",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/coordinate.js",
      "provides": [
        "ol.Coordinate",
        "ol.CoordinateArray",
        "ol.CoordinateFormatType",
        "ol.coordinate"
      ]
    },
    {
      "name": "ol.coordinate.format",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/coordinate.js",
      "provides": [
        "ol.Coordinate",
        "ol.CoordinateArray",
        "ol.CoordinateFormatType",
        "ol.coordinate"
      ]
    },
    {
      "name": "ol.coordinate.rotate",
      "kind": "function",
      "description": "Rotate `coordinate` by `angle`. `coordinate` is modified in place and\nreturned by the function.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/coordinate.js",
      "provides": [
        "ol.Coordinate",
        "ol.CoordinateArray",
        "ol.CoordinateFormatType",
        "ol.coordinate"
      ]
    },
    {
      "name": "ol.coordinate.toStringHDMS",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/coordinate.js",
      "provides": [
        "ol.Coordinate",
        "ol.CoordinateArray",
        "ol.CoordinateFormatType",
        "ol.coordinate"
      ]
    },
    {
      "name": "ol.coordinate.toStringXY",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/coordinate.js",
      "provides": [
        "ol.Coordinate",
        "ol.CoordinateArray",
        "ol.CoordinateFormatType",
        "ol.coordinate"
      ]
    },
    {
      "name": "ol.coordinate.fromProjectedArray",
      "kind": "function",
      "description": "Create an ol.Coordinate from an Array and take into account axis order.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/coordinate.js",
      "provides": [
        "ol.Coordinate",
        "ol.CoordinateArray",
        "ol.CoordinateFormatType",
        "ol.coordinate"
      ]
    },
    {
      "name": "ol.DeviceOrientation",
      "kind": "class",
      "description": "The ol.DeviceOrientation class provides access to DeviceOrientation\ninformation and events, see the [HTML 5 DeviceOrientation Specification](\nhttp://www.w3.org/TR/orientation-event/) for more details.\n\nMany new computers, and especially mobile phones\nand tablets, provide hardware support for device orientation. Web\ndevelopers targetting mobile devices will be especially interested in this\nclass.\n\nDevice orientation data are relative to a common starting point. For mobile\ndevices, the starting point is to lay your phone face up on a table with the\ntop of the phone pointing north. This represents the zero state. All\nangles are then relative to this state. For computers, it is the same except\nthe screen is open at 90 degrees.\n\nDevice orientation is reported as three angles - `alpha`, `beta`, and\n`gamma` - relative to the starting position along the three planar axes X, Y\nand Z. The X axis runs from the left edge to the right edge through the\nmiddle of the device. Similarly, the Y axis runs from the bottom to the top\nof the device through the middle. The Z axis runs from the back to the front\nthrough the middle. In the starting position, the X axis points to the\nright, the Y axis points away from you and the Z axis points straight up\nfrom the device lying flat.\n\nThe three angles representing the device orientation are relative to the\nthree axes. `alpha` indicates how much the device has been rotated around the\nZ axis, which is commonly interpreted as the compass heading (see note\nbelow). `beta` indicates how much the device has been rotated around the X\naxis, or how much it is tilted from front to back.  `gamma` indicates how\nmuch the device has been rotated around the Y axis, or how much it is tilted\nfrom left to right.\n\nFor most browsers, the `alpha` value returns the compass heading so if the\ndevice points north, it will be 0.  With Safari on iOS, the 0 value of\n`alpha` is calculated from when device orientation was first requested.\nol.DeviceOrientation provides the `heading` property which normalizes this\nbehavior across all browsers for you.\n\nIt is important to note that the HTML 5 DeviceOrientation specification\nindicates that `alpha`, `beta` and `gamma` are in degrees while the\nequivalent properties in ol.DeviceOrientation are in radians for consistency\nwith all other uses of angles throughout OpenLayers.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/deviceorientation.js",
      "provides": [
        "ol.DeviceOrientation",
        "ol.DeviceOrientationProperty"
      ]
    },
    {
      "name": "ol.DeviceOrientation#getAlpha",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/deviceorientation.js",
      "provides": [
        "ol.DeviceOrientation",
        "ol.DeviceOrientationProperty"
      ]
    },
    {
      "name": "ol.DeviceOrientation#getBeta",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/deviceorientation.js",
      "provides": [
        "ol.DeviceOrientation",
        "ol.DeviceOrientationProperty"
      ]
    },
    {
      "name": "ol.DeviceOrientation#getGamma",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/deviceorientation.js",
      "provides": [
        "ol.DeviceOrientation",
        "ol.DeviceOrientationProperty"
      ]
    },
    {
      "name": "ol.DeviceOrientation#getHeading",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/deviceorientation.js",
      "provides": [
        "ol.DeviceOrientation",
        "ol.DeviceOrientationProperty"
      ]
    },
    {
      "name": "ol.DeviceOrientation#getTracking",
      "kind": "function",
      "description": "Are we tracking the device's orientation?",
      "path": "/home/nd0ut/workspace/ol3/src/ol/deviceorientation.js",
      "provides": [
        "ol.DeviceOrientation",
        "ol.DeviceOrientationProperty"
      ]
    },
    {
      "name": "ol.DeviceOrientation#setTracking",
      "kind": "function",
      "description": "Enable or disable tracking of DeviceOrientation events.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/deviceorientation.js",
      "provides": [
        "ol.DeviceOrientation",
        "ol.DeviceOrientationProperty"
      ]
    },
    {
      "name": "ol.easing.easeIn",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/easing.js",
      "provides": [
        "ol.easing"
      ]
    },
    {
      "name": "ol.easing.easeOut",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/easing.js",
      "provides": [
        "ol.easing"
      ]
    },
    {
      "name": "ol.easing.inAndOut",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/easing.js",
      "provides": [
        "ol.easing"
      ]
    },
    {
      "name": "ol.easing.linear",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/easing.js",
      "provides": [
        "ol.easing"
      ]
    },
    {
      "name": "ol.easing.upAndDown",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/easing.js",
      "provides": [
        "ol.easing"
      ]
    },
    {
      "name": "ol.extent.boundingExtent",
      "kind": "function",
      "description": "Builds an extent that includes all given coordinates.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/extent.js",
      "provides": [
        "ol.Extent",
        "ol.extent",
        "ol.extent.Relationship"
      ]
    },
    {
      "name": "ol.extent.buffer",
      "kind": "function",
      "description": "Return extent increased by the provided value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/extent.js",
      "provides": [
        "ol.Extent",
        "ol.extent",
        "ol.extent.Relationship"
      ]
    },
    {
      "name": "ol.extent.containsCoordinate",
      "kind": "function",
      "description": "Checks if the passed coordinate is contained or on the edge of the extent.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/extent.js",
      "provides": [
        "ol.Extent",
        "ol.extent",
        "ol.extent.Relationship"
      ]
    },
    {
      "name": "ol.extent.containsExtent",
      "kind": "function",
      "description": "Checks if `extent2` is contained by or on the edge of `extent1`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/extent.js",
      "provides": [
        "ol.Extent",
        "ol.extent",
        "ol.extent.Relationship"
      ]
    },
    {
      "name": "ol.extent.createEmpty",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/extent.js",
      "provides": [
        "ol.Extent",
        "ol.extent",
        "ol.extent.Relationship"
      ]
    },
    {
      "name": "ol.extent.equals",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/extent.js",
      "provides": [
        "ol.Extent",
        "ol.extent",
        "ol.extent.Relationship"
      ]
    },
    {
      "name": "ol.extent.extend",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/extent.js",
      "provides": [
        "ol.Extent",
        "ol.extent",
        "ol.extent.Relationship"
      ]
    },
    {
      "name": "ol.extent.getBottomLeft",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/extent.js",
      "provides": [
        "ol.Extent",
        "ol.extent",
        "ol.extent.Relationship"
      ]
    },
    {
      "name": "ol.extent.getBottomRight",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/extent.js",
      "provides": [
        "ol.Extent",
        "ol.extent",
        "ol.extent.Relationship"
      ]
    },
    {
      "name": "ol.extent.getCenter",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/extent.js",
      "provides": [
        "ol.Extent",
        "ol.extent",
        "ol.extent.Relationship"
      ]
    },
    {
      "name": "ol.extent.getHeight",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/extent.js",
      "provides": [
        "ol.Extent",
        "ol.extent",
        "ol.extent.Relationship"
      ]
    },
    {
      "name": "ol.extent.getSize",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/extent.js",
      "provides": [
        "ol.Extent",
        "ol.extent",
        "ol.extent.Relationship"
      ]
    },
    {
      "name": "ol.extent.getTopLeft",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/extent.js",
      "provides": [
        "ol.Extent",
        "ol.extent",
        "ol.extent.Relationship"
      ]
    },
    {
      "name": "ol.extent.getTopRight",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/extent.js",
      "provides": [
        "ol.Extent",
        "ol.extent",
        "ol.extent.Relationship"
      ]
    },
    {
      "name": "ol.extent.getWidth",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/extent.js",
      "provides": [
        "ol.Extent",
        "ol.extent",
        "ol.extent.Relationship"
      ]
    },
    {
      "name": "ol.extent.intersects",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/extent.js",
      "provides": [
        "ol.Extent",
        "ol.extent",
        "ol.extent.Relationship"
      ]
    },
    {
      "name": "ol.extent.isEmpty",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/extent.js",
      "provides": [
        "ol.Extent",
        "ol.extent",
        "ol.extent.Relationship"
      ]
    },
    {
      "name": "ol.extent.applyTransform",
      "kind": "function",
      "description": "Apply a transform function to the extent.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/extent.js",
      "provides": [
        "ol.Extent",
        "ol.extent",
        "ol.extent.Relationship"
      ]
    },
    {
      "name": "ol.Feature",
      "kind": "class",
      "description": "A vector object for geographic features with a geometry and other\nattribute properties, similar to the features in vector file formats like\nGeoJSON.\n\nFeatures can be styled individually or use the style of their vector layer.\nNote that attribute properties are set as {@link ol.Object} properties on\nthe feature object, so they are observable, and have get/set accessors.\n\nTypically, a feature has a single geometry property. You can set the\ngeometry using the `setGeometry` method and get it with `getGeometry`.\nIt is possible to store more than one geometry on a feature using attribute\nproperties. By default, the geometry used for rendering is identified by\nthe property name `geometry`. If you want to use another geometry property\nfor rendering, use the `setGeometryName` method to change the attribute\nproperty associated with the geometry for the feature.  For example:\n\n```js\nvar feature = new ol.Feature({\n  geometry: new ol.geom.Polygon(polyCoords),\n  labelPoint: new ol.geom.Point(labelCoords),\n  name: 'My Polygon'\n});\n\n// get the polygon geometry\nvar poly = feature.getGeometry();\n\n// Render the feature as a point using the coordinates from labelPoint\nfeature.setGeometryName('labelPoint');\n\n// get the point geometry\nvar point = feature.getGeometry();\n```",
      "path": "/home/nd0ut/workspace/ol3/src/ol/feature.js",
      "provides": [
        "ol.Feature",
        "ol.feature"
      ]
    },
    {
      "name": "ol.Feature#clone",
      "kind": "function",
      "description": "Clone this feature. If the original feature has a geometry it\nis also cloned. The feature id is not set in the clone.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/feature.js",
      "provides": [
        "ol.Feature",
        "ol.feature"
      ]
    },
    {
      "name": "ol.Feature#getGeometry",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/feature.js",
      "provides": [
        "ol.Feature",
        "ol.feature"
      ]
    },
    {
      "name": "ol.Feature#getId",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/feature.js",
      "provides": [
        "ol.Feature",
        "ol.feature"
      ]
    },
    {
      "name": "ol.Feature#getGeometryName",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/feature.js",
      "provides": [
        "ol.Feature",
        "ol.feature"
      ]
    },
    {
      "name": "ol.Feature#getStyle",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/feature.js",
      "provides": [
        "ol.Feature",
        "ol.feature"
      ]
    },
    {
      "name": "ol.Feature#getStyleFunction",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/feature.js",
      "provides": [
        "ol.Feature",
        "ol.feature"
      ]
    },
    {
      "name": "ol.Feature#setGeometry",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/feature.js",
      "provides": [
        "ol.Feature",
        "ol.feature"
      ]
    },
    {
      "name": "ol.Feature#setStyle",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/feature.js",
      "provides": [
        "ol.Feature",
        "ol.feature"
      ]
    },
    {
      "name": "ol.Feature#setId",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/feature.js",
      "provides": [
        "ol.Feature",
        "ol.feature"
      ]
    },
    {
      "name": "ol.Feature#setGeometryName",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/feature.js",
      "provides": [
        "ol.Feature",
        "ol.feature"
      ]
    },
    {
      "name": "ol.FeatureOverlay",
      "kind": "class",
      "description": "A mechanism for changing the style of a small number of features on a\ntemporary basis, for example highlighting. This is necessary with the Canvas\nrenderer, where, unlike in SVG, features cannot be individually referenced.\nSee examples/vector-layers for an example: create a FeatureOverlay with a\ndifferent style, copy the feature(s) you want rendered in this different\nstyle into it, and then remove them again when you're finished.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/featureoverlay.js",
      "provides": [
        "ol.FeatureOverlay"
      ]
    },
    {
      "name": "ol.FeatureOverlay#addFeature",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/featureoverlay.js",
      "provides": [
        "ol.FeatureOverlay"
      ]
    },
    {
      "name": "ol.FeatureOverlay#getFeatures",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/featureoverlay.js",
      "provides": [
        "ol.FeatureOverlay"
      ]
    },
    {
      "name": "ol.FeatureOverlay#removeFeature",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/featureoverlay.js",
      "provides": [
        "ol.FeatureOverlay"
      ]
    },
    {
      "name": "ol.FeatureOverlay#setFeatures",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/featureoverlay.js",
      "provides": [
        "ol.FeatureOverlay"
      ]
    },
    {
      "name": "ol.FeatureOverlay#setMap",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/featureoverlay.js",
      "provides": [
        "ol.FeatureOverlay"
      ]
    },
    {
      "name": "ol.FeatureOverlay#setStyle",
      "kind": "function",
      "description": "Set the style for features.  This can be a single style object, an array\nof styles, or a function that takes a feature and resolution and returns\nan array of styles.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/featureoverlay.js",
      "provides": [
        "ol.FeatureOverlay"
      ]
    },
    {
      "name": "ol.FeatureOverlay#getStyle",
      "kind": "function",
      "description": "Get the style for features.  This returns whatever was passed to the `style`\noption at construction or to the `setStyle` method.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/featureoverlay.js",
      "provides": [
        "ol.FeatureOverlay"
      ]
    },
    {
      "name": "ol.FeatureOverlay#getStyleFunction",
      "kind": "function",
      "description": "Get the style function.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/featureoverlay.js",
      "provides": [
        "ol.FeatureOverlay"
      ]
    },
    {
      "name": "ol.Geolocation",
      "kind": "class",
      "description": "Helper class for providing HTML5 Geolocation capabilities.\nThe [Geolocation API](http://www.w3.org/TR/geolocation-API/)\nis used to locate a user's position.\n\nExample:\n\n    var geolocation = new ol.Geolocation();\n    // take the projection to use from the map's view\n    geolocation.bindTo('projection', map.getView());\n    // listen to changes in position\n    geolocation.on('change', function(evt) {\n      window.console.log(geolocation.getPosition());\n    });",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geolocation.js",
      "provides": [
        "ol.Geolocation",
        "ol.GeolocationProperty"
      ]
    },
    {
      "name": "ol.Geolocation#getAccuracy",
      "kind": "function",
      "description": "Get the accuracy of the position in meters.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geolocation.js",
      "provides": [
        "ol.Geolocation",
        "ol.GeolocationProperty"
      ]
    },
    {
      "name": "ol.Geolocation#getAccuracyGeometry",
      "kind": "function",
      "description": "Get a geometry of the position accuracy.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geolocation.js",
      "provides": [
        "ol.Geolocation",
        "ol.GeolocationProperty"
      ]
    },
    {
      "name": "ol.Geolocation#getAltitude",
      "kind": "function",
      "description": "Get the altitude associated with the position.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geolocation.js",
      "provides": [
        "ol.Geolocation",
        "ol.GeolocationProperty"
      ]
    },
    {
      "name": "ol.Geolocation#getAltitudeAccuracy",
      "kind": "function",
      "description": "Get the altitude accuracy of the position.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geolocation.js",
      "provides": [
        "ol.Geolocation",
        "ol.GeolocationProperty"
      ]
    },
    {
      "name": "ol.Geolocation#getHeading",
      "kind": "function",
      "description": "Get the heading as radians clockwise from North.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geolocation.js",
      "provides": [
        "ol.Geolocation",
        "ol.GeolocationProperty"
      ]
    },
    {
      "name": "ol.Geolocation#getPosition",
      "kind": "function",
      "description": "Get the position of the device.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geolocation.js",
      "provides": [
        "ol.Geolocation",
        "ol.GeolocationProperty"
      ]
    },
    {
      "name": "ol.Geolocation#getProjection",
      "kind": "function",
      "description": "Get the projection associated with the position.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geolocation.js",
      "provides": [
        "ol.Geolocation",
        "ol.GeolocationProperty"
      ]
    },
    {
      "name": "ol.Geolocation#getSpeed",
      "kind": "function",
      "description": "Get the speed in meters per second.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geolocation.js",
      "provides": [
        "ol.Geolocation",
        "ol.GeolocationProperty"
      ]
    },
    {
      "name": "ol.Geolocation#getTracking",
      "kind": "function",
      "description": "Are we tracking the user's position?",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geolocation.js",
      "provides": [
        "ol.Geolocation",
        "ol.GeolocationProperty"
      ]
    },
    {
      "name": "ol.Geolocation#getTrackingOptions",
      "kind": "function",
      "description": "Get the tracking options.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geolocation.js",
      "provides": [
        "ol.Geolocation",
        "ol.GeolocationProperty"
      ]
    },
    {
      "name": "ol.Geolocation#setProjection",
      "kind": "function",
      "description": "Set the projection to use for transforming the coordinates.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geolocation.js",
      "provides": [
        "ol.Geolocation",
        "ol.GeolocationProperty"
      ]
    },
    {
      "name": "ol.Geolocation#setTracking",
      "kind": "function",
      "description": "Enable/disable tracking.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geolocation.js",
      "provides": [
        "ol.Geolocation",
        "ol.GeolocationProperty"
      ]
    },
    {
      "name": "ol.Geolocation#setTrackingOptions",
      "kind": "function",
      "description": "Set the tracking options.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geolocation.js",
      "provides": [
        "ol.Geolocation",
        "ol.GeolocationProperty"
      ]
    },
    {
      "name": "ol.ImageTile#getImage",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/imagetile.js",
      "provides": [
        "ol.ImageTile"
      ]
    },
    {
      "name": "ol.Kinetic",
      "kind": "class",
      "description": "Implementation of inertial deceleration for map movement.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/kinetic.js",
      "provides": [
        "ol.Kinetic"
      ]
    },
    {
      "name": "ol.loadingstrategy.all",
      "kind": "function",
      "description": "Strategy function for loading all features with a single request.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/loadingstrategy.js",
      "provides": [
        "ol.loadingstrategy"
      ]
    },
    {
      "name": "ol.loadingstrategy.bbox",
      "kind": "function",
      "description": "Strategy function for loading features based on the view's extent and\nresolution.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/loadingstrategy.js",
      "provides": [
        "ol.loadingstrategy"
      ]
    },
    {
      "name": "ol.loadingstrategy.createTile",
      "kind": "function",
      "description": "Creates a strategy function for loading features based on a tile grid.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/loadingstrategy.js",
      "provides": [
        "ol.loadingstrategy"
      ]
    },
    {
      "name": "ol.Map",
      "kind": "class",
      "description": "The map is the core component of OpenLayers. In its minimal configuration it\nneeds a view, one or more layers, and a target container:\n\n    var map = new ol.Map({\n      view: new ol.View({\n        center: [0, 0],\n        zoom: 1\n      }),\n      layers: [\n        new ol.layer.Tile({\n          source: new ol.source.MapQuest({layer: 'osm'})\n        })\n      ],\n      target: 'map'\n    });\n\nThe above snippet creates a map with a MapQuest OSM layer on a 2D view and\nrenders it to a DOM element with the id `map`.\n\nThe constructor places a viewport container (with CSS class name\n`ol-viewport`) in the target element (see `getViewport()`), and then two\nfurther elements within the viewport: one with CSS class name\n`ol-overlaycontainer-stopevent` for controls and some overlays, and one with\nCSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\noption of {@link ol.Overlay} for the difference). The map itself is placed in\na further element within the viewport, either DOM or Canvas, depending on the\nrenderer.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/map.js",
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#addControl",
      "kind": "function",
      "description": "Add the given control to the map.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/map.js",
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#addInteraction",
      "kind": "function",
      "description": "Add the given interaction to the map.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/map.js",
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#addLayer",
      "kind": "function",
      "description": "Adds the given layer to the top of this map.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/map.js",
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#addOverlay",
      "kind": "function",
      "description": "Add the given overlay to the map.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/map.js",
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#beforeRender",
      "kind": "function",
      "description": "Add functions to be called before rendering. This can be used for attaching\nanimations before updating the map's view.  The {@link ol.animation}\nnamespace provides several static methods for creating prerender functions.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/map.js",
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#forEachFeatureAtPixel",
      "kind": "function",
      "description": "Detect features that intersect a pixel on the viewport, and execute a\ncallback with each intersecting feature. Layers included in the detection can\nbe configured through `opt_layerFilter`. Feature overlays will always be\nincluded in the detection.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/map.js",
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#getEventCoordinate",
      "kind": "function",
      "description": "Returns the geographical coordinate for a browser event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/map.js",
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#getEventPixel",
      "kind": "function",
      "description": "Returns the map pixel position for a browser event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/map.js",
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#getTarget",
      "kind": "function",
      "description": "Get the target in which this map is rendered.\nNote that this returns what is entered as an option or in setTarget:\nif that was an element, it returns an element; if a string, it returns that.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/map.js",
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#getCoordinateFromPixel",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/map.js",
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#getControls",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/map.js",
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#getOverlays",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/map.js",
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#getInteractions",
      "kind": "function",
      "description": "Gets the collection of {@link ol.interaction.Interaction} instances\nassociated with this map. Modifying this collection changes the interactions\nassociated with the map.\n\nInteractions are used for e.g. pan, zoom and rotate.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/map.js",
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#getLayerGroup",
      "kind": "function",
      "description": "Get the layergroup associated with this map.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/map.js",
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#getLayers",
      "kind": "function",
      "description": "Get the collection of layers associated with this map.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/map.js",
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#getPixelFromCoordinate",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/map.js",
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#getSize",
      "kind": "function",
      "description": "Get the size of this map.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/map.js",
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#getView",
      "kind": "function",
      "description": "Get the view associated with this map. A view manages properties such as\ncenter and resolution.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/map.js",
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#getViewport",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/map.js",
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#renderSync",
      "kind": "function",
      "description": "Requests an immediate render in a synchronous manner.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/map.js",
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#render",
      "kind": "function",
      "description": "Requests a render frame; rendering will effectively occur at the next browser\nanimation frame.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/map.js",
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#removeControl",
      "kind": "function",
      "description": "Remove the given control from the map.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/map.js",
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#removeInteraction",
      "kind": "function",
      "description": "Remove the given interaction from the map.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/map.js",
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#removeLayer",
      "kind": "function",
      "description": "Removes the given layer from the map.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/map.js",
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#removeOverlay",
      "kind": "function",
      "description": "Remove the given overlay from the map.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/map.js",
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#setLayerGroup",
      "kind": "function",
      "description": "Sets the layergroup of this map.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/map.js",
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#setSize",
      "kind": "function",
      "description": "Set the size of this map.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/map.js",
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#setTarget",
      "kind": "function",
      "description": "Set the target element to render this map into.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/map.js",
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#setView",
      "kind": "function",
      "description": "Set the view for this map.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/map.js",
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.Map#updateSize",
      "kind": "function",
      "description": "Force a recalculation of the map viewport size.  This should be called when\nthird-party code changes the size of the map viewport.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/map.js",
      "provides": [
        "ol.Map",
        "ol.MapProperty"
      ]
    },
    {
      "name": "ol.MapBrowserEvent#originalEvent",
      "kind": "constant",
      "path": "/home/nd0ut/workspace/ol3/src/ol/mapbrowserevent.js",
      "provides": [
        "ol.MapBrowserEvent",
        "ol.MapBrowserEvent.EventType",
        "ol.MapBrowserEventHandler",
        "ol.MapBrowserPointerEvent"
      ]
    },
    {
      "name": "ol.MapBrowserEvent#coordinate",
      "kind": "member",
      "path": "/home/nd0ut/workspace/ol3/src/ol/mapbrowserevent.js",
      "provides": [
        "ol.MapBrowserEvent",
        "ol.MapBrowserEvent.EventType",
        "ol.MapBrowserEventHandler",
        "ol.MapBrowserPointerEvent"
      ]
    },
    {
      "name": "ol.MapBrowserEvent#pixel",
      "kind": "member",
      "path": "/home/nd0ut/workspace/ol3/src/ol/mapbrowserevent.js",
      "provides": [
        "ol.MapBrowserEvent",
        "ol.MapBrowserEvent.EventType",
        "ol.MapBrowserEventHandler",
        "ol.MapBrowserPointerEvent"
      ]
    },
    {
      "name": "ol.MapBrowserEvent#preventDefault",
      "kind": "function",
      "description": "Prevents the default browser action.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/mapbrowserevent.js",
      "provides": [
        "ol.MapBrowserEvent",
        "ol.MapBrowserEvent.EventType",
        "ol.MapBrowserEventHandler",
        "ol.MapBrowserPointerEvent"
      ]
    },
    {
      "name": "ol.MapBrowserEvent#stopPropagation",
      "kind": "function",
      "description": "Prevents further propagation of the current event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/mapbrowserevent.js",
      "provides": [
        "ol.MapBrowserEvent",
        "ol.MapBrowserEvent.EventType",
        "ol.MapBrowserEventHandler",
        "ol.MapBrowserPointerEvent"
      ]
    },
    {
      "name": "ol.MapEvent#map",
      "kind": "member",
      "description": "The map where the event occurred.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/mapevent.js",
      "provides": [
        "ol.MapEvent",
        "ol.MapEventType"
      ]
    },
    {
      "name": "ol.MapEvent#frameState",
      "kind": "member",
      "description": "The frame state at the time of the event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/mapevent.js",
      "provides": [
        "ol.MapEvent",
        "ol.MapEventType"
      ]
    },
    {
      "name": "ol.ObjectEvent#key",
      "kind": "member",
      "description": "The name of the property whose value is changing.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.ObjectAccessor#transform",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Object",
      "kind": "class",
      "description": "Abstract base class; normally only used for creating subclasses and not\ninstantiated in apps.\nMost non-trivial classes inherit from this.\n\nThis extends {@link ol.Observable} with observable properties, where each\nproperty is observable as well as the object as a whole.\n\nClasses that inherit from this have pre-defined properties, to which you can\nadd your own. The pre-defined properties are listed in this documentation as\n'Observable Properties', and have their own accessors; for example,\n{@link ol.Map} has a `target` property, accessed with `getTarget()`  and\nchanged with `setTarget()`. Not all properties are however settable. There\nare also general-purpose accessors `get()` and `set()`. For example,\n`get('target')` is equivalent to `getTarget()`.\n\nThe `set` accessors trigger a change event, and you can monitor this by\nregistering a listener. For example, {@link ol.View} has a `center`\nproperty, so `view.on('change:center', function(evt) {...});` would call the\nfunction whenever the value of the center property changes. Within the\nfunction, `evt.target` would be the view, so `evt.target.getCenter()` would\nreturn the new center.\n\nYou can add your own observable properties with `set('myProp', 'new value')`,\nand retrieve that with `get('myProp')`. A change listener can then be\nregistered with `on('change:myProp', ...)`. And a change can be triggered\nwith `dispatchEvent('change:myProp')`. You can get a list of all properties\nwith `getProperties()`.\n\nNote that the observable properties are separate from standard JS properties.\nYou can, for example, give your map object a title with\n`map.title='New title'` and with `map.set('title', 'Another title')`. The\nfirst will be a `hasOwnProperty`; the second will appear in\n`getProperties()`. Only the second is observable.\n\nThe observable properties also implement a form of Key Value Observing.\nTwo objects can be bound together such that a change in one will\nautomatically be reflected in the other. See `bindTo` method for more\ndetails, and see {@link ol.dom.Input} for the specific case of binding an\nobject with an HTML element.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Object#bindTo",
      "kind": "function",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an object with a\n`transform` method that you can use to provide `from` and `to`\nfunctions to transform values on the way from the source to the\ntarget and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Object#get",
      "kind": "function",
      "description": "Gets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Object#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Object#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Object#set",
      "kind": "function",
      "description": "Sets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Object#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Object#unbind",
      "kind": "function",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Object#unbindAll",
      "kind": "function",
      "description": "Removes all bindings.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Observable",
      "kind": "class",
      "description": "Abstract base class; normally only used for creating subclasses and not\ninstantiated in apps.\nAn event target providing convenient methods for listener registration\nand unregistration. A generic `change` event is always available through\n{@link ol.Observable#dispatchChangeEvent}.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Observable#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Observable#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Observable#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Observable#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Observable#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Observable#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.inherits",
      "kind": "function",
      "description": "Inherit the prototype methods from one constructor into another.\n\nUsage:\n\n    function ParentClass(a, b) { }\n    ParentClass.prototype.foo = function(a) { }\n\n    function ChildClass(a, b, c) {\n      goog.base(this, a, b);\n    }\n    ol.inherits(ChildClass, ParentClass);\n\n    var child = new ChildClass('a', 'b', 'see');\n    child.foo(); // This works.\n\nIn addition, a superclass' implementation of a method can be invoked as\nfollows:\n\n    ChildClass.prototype.foo = function(a) {\n      ChildClass.superClass_.foo.call(this, a);\n      // Other code here.\n    };",
      "path": "/home/nd0ut/workspace/ol3/src/ol/ol.js",
      "provides": [
        "ol"
      ]
    },
    {
      "name": "ol.Overlay",
      "kind": "class",
      "description": "Like {@link ol.control.Control}, Overlays are visible widgets.\nUnlike Controls, they are not in a fixed position on the screen, but are tied\nto a geographical coordinate, so panning the map will move an Overlay but not\na Control.\n\nExample:\n\n    var popup = new ol.Overlay({\n      element: document.getElementById('popup')\n    });\n    popup.setPosition(coordinate);\n    map.addOverlay(popup);",
      "path": "/home/nd0ut/workspace/ol3/src/ol/overlay.js",
      "provides": [
        "ol.Overlay",
        "ol.OverlayPositioning",
        "ol.OverlayProperty"
      ]
    },
    {
      "name": "ol.Overlay#getElement",
      "kind": "function",
      "description": "Get the DOM element of this overlay.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/overlay.js",
      "provides": [
        "ol.Overlay",
        "ol.OverlayPositioning",
        "ol.OverlayProperty"
      ]
    },
    {
      "name": "ol.Overlay#getMap",
      "kind": "function",
      "description": "Get the map associated with this overlay.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/overlay.js",
      "provides": [
        "ol.Overlay",
        "ol.OverlayPositioning",
        "ol.OverlayProperty"
      ]
    },
    {
      "name": "ol.Overlay#getOffset",
      "kind": "function",
      "description": "Get the offset of this overlay.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/overlay.js",
      "provides": [
        "ol.Overlay",
        "ol.OverlayPositioning",
        "ol.OverlayProperty"
      ]
    },
    {
      "name": "ol.Overlay#getPosition",
      "kind": "function",
      "description": "Get the current position of this overlay.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/overlay.js",
      "provides": [
        "ol.Overlay",
        "ol.OverlayPositioning",
        "ol.OverlayProperty"
      ]
    },
    {
      "name": "ol.Overlay#getPositioning",
      "kind": "function",
      "description": "Get the current positioning of this overlay.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/overlay.js",
      "provides": [
        "ol.Overlay",
        "ol.OverlayPositioning",
        "ol.OverlayProperty"
      ]
    },
    {
      "name": "ol.Overlay#setElement",
      "kind": "function",
      "description": "Set the DOM element to be associated with this overlay.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/overlay.js",
      "provides": [
        "ol.Overlay",
        "ol.OverlayPositioning",
        "ol.OverlayProperty"
      ]
    },
    {
      "name": "ol.Overlay#setMap",
      "kind": "function",
      "description": "Set the map to be associated with this overlay.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/overlay.js",
      "provides": [
        "ol.Overlay",
        "ol.OverlayPositioning",
        "ol.OverlayProperty"
      ]
    },
    {
      "name": "ol.Overlay#setOffset",
      "kind": "function",
      "description": "Set the offset for this overlay.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/overlay.js",
      "provides": [
        "ol.Overlay",
        "ol.OverlayPositioning",
        "ol.OverlayProperty"
      ]
    },
    {
      "name": "ol.Overlay#setPosition",
      "kind": "function",
      "description": "Set the position for this overlay.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/overlay.js",
      "provides": [
        "ol.Overlay",
        "ol.OverlayPositioning",
        "ol.OverlayProperty"
      ]
    },
    {
      "name": "ol.Overlay#setPositioning",
      "kind": "function",
      "description": "Set the positioning for this overlay.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/overlay.js",
      "provides": [
        "ol.Overlay",
        "ol.OverlayPositioning",
        "ol.OverlayProperty"
      ]
    },
    {
      "name": "ol.Tile#getTileCoord",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/tile.js",
      "provides": [
        "ol.Tile",
        "ol.TileState"
      ]
    },
    {
      "name": "ol.TileCoord#getZXY",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/tilecoord.js",
      "provides": [
        "ol.TileCoord"
      ]
    },
    {
      "name": "ol.View",
      "kind": "class",
      "description": "An ol.View object represents a simple 2D view of the map.\n\nThis is the object to act upon to change the center, resolution,\nand rotation of the map.\n\n### The view states\n\nAn `ol.View` is determined by three states: `center`, `resolution`,\nand `rotation`. To each state corresponds a getter and a setter. E.g.\n`getCenter` and `setCenter` for the `center` state.\n\nAn `ol.View` has a `projection`. The projection determines the\ncoordinate system of the center, and its units determine the units of the\nresolution (projection units per pixel). The default projection is\nSpherical Mercator (EPSG:3857).\n\n### The constraints\n\n`setCenter`, `setResolution` and `setRotation` can be used to change the\nstates of the view. Any value can be passed to the setters. And the value\nthat is passed to a setter will effectively be the value set in the view,\nand returned by the corresponding getter.\n\nBut an `ol.View` object also has a *resolution constraint*, a\n*rotation constraint* and a *center constraint*.\n\nAs said above no constraints are applied when the setters are used to set\nnew states for the view. Applying constraints is done explicitly through\nthe use of the `constrain*` functions (`constrainResolution` and\n`constrainRotation` and `constrainCenter`).\n\nThe main users of the constraints are the interactions and the\ncontrols. For example, double-clicking on the map changes the view to\nthe \"next\" resolution. And releasing the fingers after pinch-zooming\nsnaps to the closest resolution (with an animation).\n\nSo the *resolution constraint* snaps to specific resolutions. It is\ndetermined by the following options: `resolutions`, `maxResolution`,\n`maxZoom`, and `zoomFactor`. If `resolutions` is set, the other three\noptions are ignored. See {@link ol.ViewOptions} for more information.\n\nThe *rotation constaint* is currently not configurable. It snaps the\nrotation value to zero when approaching the horizontal.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/view.js",
      "provides": [
        "ol.View",
        "ol.ViewHint"
      ]
    },
    {
      "name": "ol.View#constrainCenter",
      "kind": "function",
      "description": "Get the constrained center of this view.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/view.js",
      "provides": [
        "ol.View",
        "ol.ViewHint"
      ]
    },
    {
      "name": "ol.View#constrainResolution",
      "kind": "function",
      "description": "Get the constrained resolution of this view.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/view.js",
      "provides": [
        "ol.View",
        "ol.ViewHint"
      ]
    },
    {
      "name": "ol.View#constrainRotation",
      "kind": "function",
      "description": "Get the constrained rotation of this view.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/view.js",
      "provides": [
        "ol.View",
        "ol.ViewHint"
      ]
    },
    {
      "name": "ol.View#getCenter",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/view.js",
      "provides": [
        "ol.View",
        "ol.ViewHint"
      ]
    },
    {
      "name": "ol.View#calculateExtent",
      "kind": "function",
      "description": "Calculate the extent for the given size in pixels, based on the current\nresolution and the current center.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/view.js",
      "provides": [
        "ol.View",
        "ol.ViewHint"
      ]
    },
    {
      "name": "ol.View#getProjection",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/view.js",
      "provides": [
        "ol.View",
        "ol.ViewHint"
      ]
    },
    {
      "name": "ol.View#getResolution",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/view.js",
      "provides": [
        "ol.View",
        "ol.ViewHint"
      ]
    },
    {
      "name": "ol.View#getResolutionForExtent",
      "kind": "function",
      "description": "Get the resolution for a provided extent (in map units) and size (in pixels).",
      "path": "/home/nd0ut/workspace/ol3/src/ol/view.js",
      "provides": [
        "ol.View",
        "ol.ViewHint"
      ]
    },
    {
      "name": "ol.View#getRotation",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/view.js",
      "provides": [
        "ol.View",
        "ol.ViewHint"
      ]
    },
    {
      "name": "ol.View#getZoom",
      "kind": "function",
      "description": "Get the current zoom level. Return undefined if the current\nresolution is undefined or not a \"constrained resolution\".",
      "path": "/home/nd0ut/workspace/ol3/src/ol/view.js",
      "provides": [
        "ol.View",
        "ol.ViewHint"
      ]
    },
    {
      "name": "ol.View#fitExtent",
      "kind": "function",
      "description": "Fit the given extent based on the given map size.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/view.js",
      "provides": [
        "ol.View",
        "ol.ViewHint"
      ]
    },
    {
      "name": "ol.View#fitGeometry",
      "kind": "function",
      "description": "Fit the given geometry based on the given map size and border.\nTake care on the map angle.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/view.js",
      "provides": [
        "ol.View",
        "ol.ViewHint"
      ]
    },
    {
      "name": "ol.View#centerOn",
      "kind": "function",
      "description": "Center on coordinate and view position.\nTake care on the map angle.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/view.js",
      "provides": [
        "ol.View",
        "ol.ViewHint"
      ]
    },
    {
      "name": "ol.View#rotate",
      "kind": "function",
      "description": "Rotate the view around a given coordinate.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/view.js",
      "provides": [
        "ol.View",
        "ol.ViewHint"
      ]
    },
    {
      "name": "ol.View#setCenter",
      "kind": "function",
      "description": "Set the center of the current view.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/view.js",
      "provides": [
        "ol.View",
        "ol.ViewHint"
      ]
    },
    {
      "name": "ol.View#setProjection",
      "kind": "function",
      "description": "Set the projection of this view.\nWarning! This code is not yet implemented. Function should not be used.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/view.js",
      "provides": [
        "ol.View",
        "ol.ViewHint"
      ]
    },
    {
      "name": "ol.View#setResolution",
      "kind": "function",
      "description": "Set the resolution for this view.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/view.js",
      "provides": [
        "ol.View",
        "ol.ViewHint"
      ]
    },
    {
      "name": "ol.View#setRotation",
      "kind": "function",
      "description": "Set the rotation for this view.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/view.js",
      "provides": [
        "ol.View",
        "ol.ViewHint"
      ]
    },
    {
      "name": "ol.View#setZoom",
      "kind": "function",
      "description": "Zoom to a specific zoom level.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/view.js",
      "provides": [
        "ol.View",
        "ol.ViewHint"
      ]
    },
    {
      "name": "ol.webgl.Context",
      "kind": "class",
      "description": "A WebGL context for accessing low-level WebGL capabilities.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/webgl/context.js",
      "provides": [
        "ol.webgl.Context"
      ]
    },
    {
      "name": "ol.webgl.Context#getGL",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/webgl/context.js",
      "provides": [
        "ol.webgl.Context"
      ]
    },
    {
      "name": "ol.webgl.Context#useProgram",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/webgl/context.js",
      "provides": [
        "ol.webgl.Context"
      ]
    },
    {
      "name": "ol.tilegrid.TileGrid",
      "kind": "class",
      "description": "Base class for setting the grid pattern for sources accessing tiled-image\nservers.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/tilegrid/tilegrid.js",
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.TileGrid#getMinZoom",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/tilegrid/tilegrid.js",
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.TileGrid#getOrigin",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/tilegrid/tilegrid.js",
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.TileGrid#getResolution",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/tilegrid/tilegrid.js",
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.TileGrid#getResolutions",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/tilegrid/tilegrid.js",
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.TileGrid#getTileSize",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/tilegrid/tilegrid.js",
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.WMTS",
      "kind": "class",
      "description": "Set the grid pattern for sources accessing WMTS tiled-image servers.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/tilegrid/wmtstilegrid.js",
      "provides": [
        "ol.tilegrid.WMTS"
      ]
    },
    {
      "name": "ol.tilegrid.WMTS#getMatrixIds",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/tilegrid/wmtstilegrid.js",
      "provides": [
        "ol.tilegrid.WMTS"
      ]
    },
    {
      "name": "ol.tilegrid.XYZ",
      "kind": "class",
      "description": "Set the grid pattern for sources accessing XYZ tiled-image servers.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/tilegrid/xyztilegrid.js",
      "provides": [
        "ol.tilegrid.XYZ"
      ]
    },
    {
      "name": "ol.tilegrid.Zoomify",
      "kind": "class",
      "description": "Set the grid pattern for sources accessing Zoomify tiled-image servers.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/tilegrid/zoomifytilegrid.js",
      "provides": [
        "ol.tilegrid.Zoomify"
      ]
    },
    {
      "name": "ol.style.Circle",
      "kind": "class",
      "description": "Set circle style for vector features.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/circlestyle.js",
      "provides": [
        "ol.style.Circle"
      ]
    },
    {
      "name": "ol.style.Circle#getAnchor",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/circlestyle.js",
      "provides": [
        "ol.style.Circle"
      ]
    },
    {
      "name": "ol.style.Circle#getFill",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/circlestyle.js",
      "provides": [
        "ol.style.Circle"
      ]
    },
    {
      "name": "ol.style.Circle#getImage",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/circlestyle.js",
      "provides": [
        "ol.style.Circle"
      ]
    },
    {
      "name": "ol.style.Circle#getOrigin",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/circlestyle.js",
      "provides": [
        "ol.style.Circle"
      ]
    },
    {
      "name": "ol.style.Circle#getRadius",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/circlestyle.js",
      "provides": [
        "ol.style.Circle"
      ]
    },
    {
      "name": "ol.style.Circle#getSize",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/circlestyle.js",
      "provides": [
        "ol.style.Circle"
      ]
    },
    {
      "name": "ol.style.Circle#getStroke",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/circlestyle.js",
      "provides": [
        "ol.style.Circle"
      ]
    },
    {
      "name": "ol.style.Fill",
      "kind": "class",
      "description": "Set fill style for vector features.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/fillstyle.js",
      "provides": [
        "ol.style.Fill"
      ]
    },
    {
      "name": "ol.style.Fill#getColor",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/fillstyle.js",
      "provides": [
        "ol.style.Fill"
      ]
    },
    {
      "name": "ol.style.Icon",
      "kind": "class",
      "description": "Set icon style for vector features.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/iconstyle.js",
      "provides": [
        "ol.style.Icon",
        "ol.style.IconAnchorUnits",
        "ol.style.IconImageCache",
        "ol.style.IconOrigin"
      ]
    },
    {
      "name": "ol.style.Icon#getAnchor",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/iconstyle.js",
      "provides": [
        "ol.style.Icon",
        "ol.style.IconAnchorUnits",
        "ol.style.IconImageCache",
        "ol.style.IconOrigin"
      ]
    },
    {
      "name": "ol.style.Icon#getImage",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/iconstyle.js",
      "provides": [
        "ol.style.Icon",
        "ol.style.IconAnchorUnits",
        "ol.style.IconImageCache",
        "ol.style.IconOrigin"
      ]
    },
    {
      "name": "ol.style.Icon#getOrigin",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/iconstyle.js",
      "provides": [
        "ol.style.Icon",
        "ol.style.IconAnchorUnits",
        "ol.style.IconImageCache",
        "ol.style.IconOrigin"
      ]
    },
    {
      "name": "ol.style.Icon#getSrc",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/iconstyle.js",
      "provides": [
        "ol.style.Icon",
        "ol.style.IconAnchorUnits",
        "ol.style.IconImageCache",
        "ol.style.IconOrigin"
      ]
    },
    {
      "name": "ol.style.Icon#getSize",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/iconstyle.js",
      "provides": [
        "ol.style.Icon",
        "ol.style.IconAnchorUnits",
        "ol.style.IconImageCache",
        "ol.style.IconOrigin"
      ]
    },
    {
      "name": "ol.style.Image#getRotation",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/imagestyle.js",
      "provides": [
        "ol.style.Image",
        "ol.style.ImageState"
      ]
    },
    {
      "name": "ol.style.Image#getScale",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/imagestyle.js",
      "provides": [
        "ol.style.Image",
        "ol.style.ImageState"
      ]
    },
    {
      "name": "ol.style.Stroke",
      "kind": "class",
      "description": "Set stroke style for vector features.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/strokestyle.js",
      "provides": [
        "ol.style.Stroke"
      ]
    },
    {
      "name": "ol.style.Stroke#getColor",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/strokestyle.js",
      "provides": [
        "ol.style.Stroke"
      ]
    },
    {
      "name": "ol.style.Stroke#getLineCap",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/strokestyle.js",
      "provides": [
        "ol.style.Stroke"
      ]
    },
    {
      "name": "ol.style.Stroke#getLineDash",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/strokestyle.js",
      "provides": [
        "ol.style.Stroke"
      ]
    },
    {
      "name": "ol.style.Stroke#getLineJoin",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/strokestyle.js",
      "provides": [
        "ol.style.Stroke"
      ]
    },
    {
      "name": "ol.style.Stroke#getMiterLimit",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/strokestyle.js",
      "provides": [
        "ol.style.Stroke"
      ]
    },
    {
      "name": "ol.style.Stroke#getWidth",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/strokestyle.js",
      "provides": [
        "ol.style.Stroke"
      ]
    },
    {
      "name": "ol.style.Style",
      "kind": "class",
      "description": "Base class for vector feature rendering styles.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/style.js",
      "provides": [
        "ol.style.Style"
      ]
    },
    {
      "name": "ol.style.Style#getFill",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/style.js",
      "provides": [
        "ol.style.Style"
      ]
    },
    {
      "name": "ol.style.Style#getImage",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/style.js",
      "provides": [
        "ol.style.Style"
      ]
    },
    {
      "name": "ol.style.Style#getStroke",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/style.js",
      "provides": [
        "ol.style.Style"
      ]
    },
    {
      "name": "ol.style.Style#getText",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/style.js",
      "provides": [
        "ol.style.Style"
      ]
    },
    {
      "name": "ol.style.Style#getZIndex",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/style.js",
      "provides": [
        "ol.style.Style"
      ]
    },
    {
      "name": "ol.style.Text",
      "kind": "class",
      "description": "Set text style for vector features.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/textstyle.js",
      "provides": [
        "ol.style.Text"
      ]
    },
    {
      "name": "ol.style.Text#getFont",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/textstyle.js",
      "provides": [
        "ol.style.Text"
      ]
    },
    {
      "name": "ol.style.Text#getFill",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/textstyle.js",
      "provides": [
        "ol.style.Text"
      ]
    },
    {
      "name": "ol.style.Text#getRotation",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/textstyle.js",
      "provides": [
        "ol.style.Text"
      ]
    },
    {
      "name": "ol.style.Text#getScale",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/textstyle.js",
      "provides": [
        "ol.style.Text"
      ]
    },
    {
      "name": "ol.style.Text#getStroke",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/textstyle.js",
      "provides": [
        "ol.style.Text"
      ]
    },
    {
      "name": "ol.style.Text#getText",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/textstyle.js",
      "provides": [
        "ol.style.Text"
      ]
    },
    {
      "name": "ol.style.Text#getTextAlign",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/textstyle.js",
      "provides": [
        "ol.style.Text"
      ]
    },
    {
      "name": "ol.style.Text#getTextBaseline",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/textstyle.js",
      "provides": [
        "ol.style.Text"
      ]
    },
    {
      "name": "ol.sphere.WGS84",
      "kind": "constant",
      "description": "A sphere with radius equal to the semi-major axis of the WGS84 ellipsoid.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/sphere/wgs84sphere.js",
      "provides": [
        "ol.sphere.WGS84"
      ]
    },
    {
      "name": "ol.source.BingMaps",
      "kind": "class",
      "description": "Layer source for Bing Maps tile data.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/bingmapssource.js",
      "provides": [
        "ol.source.BingMaps"
      ]
    },
    {
      "name": "ol.source.BingMaps.TOS_ATTRIBUTION",
      "kind": "constant",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/bingmapssource.js",
      "provides": [
        "ol.source.BingMaps"
      ]
    },
    {
      "name": "ol.source.TileDebug",
      "kind": "class",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/debugtilesource.js",
      "provides": [
        "ol.source.TileDebug"
      ]
    },
    {
      "name": "ol.source.FormatVector#readFeatures",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/formatvectorsource.js",
      "provides": [
        "ol.source.FormatVector"
      ]
    },
    {
      "name": "ol.source.GeoJSON",
      "kind": "class",
      "description": "Static vector source in GeoJSON format",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/geojsonsource.js",
      "provides": [
        "ol.source.GeoJSON"
      ]
    },
    {
      "name": "ol.source.GPX",
      "kind": "class",
      "description": "Static vector source in GPX format",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/gpxsource.js",
      "provides": [
        "ol.source.GPX"
      ]
    },
    {
      "name": "ol.source.IGC",
      "kind": "class",
      "description": "Static vector source in IGC format",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/igcsource.js",
      "provides": [
        "ol.source.IGC"
      ]
    },
    {
      "name": "ol.source.ImageCanvas",
      "kind": "class",
      "description": "Base class for image sources where a canvas element is the image.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/imagecanvassource.js",
      "provides": [
        "ol.source.ImageCanvas"
      ]
    },
    {
      "name": "ol.source.ImageStatic",
      "kind": "class",
      "description": "An image source for 'static', that is, non-georeferenced, images.\nSee examples/static-image for example.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/imagestaticsource.js",
      "provides": [
        "ol.source.ImageStatic"
      ]
    },
    {
      "name": "ol.source.ImageVector",
      "kind": "class",
      "description": "An image source whose images are canvas elements into which vector features\nread from a vector source (`ol.source.Vector`) are drawn. An\n`ol.source.ImageVector` object is to be used as the `source` of an image\nlayer (`ol.layer.Image`). Image layers are rotated, scaled, and translated,\nas opposed to being re-rendered, during animations and interactions. So, like\nany other image layer, an image layer configured with an\n`ol.source.ImageVector` will exhibit this behaviour. This is in contrast to a\nvector layer, where vector features are re-drawn during animations and\ninteractions.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/imagevectorsource.js",
      "provides": [
        "ol.source.ImageVector"
      ]
    },
    {
      "name": "ol.source.ImageVector#getSource",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/imagevectorsource.js",
      "provides": [
        "ol.source.ImageVector"
      ]
    },
    {
      "name": "ol.source.ImageWMS",
      "kind": "class",
      "description": "Source for WMS servers providing single, untiled images.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/imagewmssource.js",
      "provides": [
        "ol.source.ImageWMS"
      ]
    },
    {
      "name": "ol.source.ImageWMS#getGetFeatureInfoUrl",
      "kind": "function",
      "description": "Return the GetFeatureInfo URL for the passed coordinate, resolution, and\nprojection. Return `undefined` if the GetFeatureInfo URL cannot be\nconstructed.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/imagewmssource.js",
      "provides": [
        "ol.source.ImageWMS"
      ]
    },
    {
      "name": "ol.source.ImageWMS#getParams",
      "kind": "function",
      "description": "Get the user-provided params, i.e. those passed to the constructor through\nthe \"params\" option, and possibly updated using the updateParams method.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/imagewmssource.js",
      "provides": [
        "ol.source.ImageWMS"
      ]
    },
    {
      "name": "ol.source.ImageWMS#getUrl",
      "kind": "function",
      "description": "Return the URL used for this WMS source.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/imagewmssource.js",
      "provides": [
        "ol.source.ImageWMS"
      ]
    },
    {
      "name": "ol.source.ImageWMS#setUrl",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/imagewmssource.js",
      "provides": [
        "ol.source.ImageWMS"
      ]
    },
    {
      "name": "ol.source.ImageWMS#updateParams",
      "kind": "function",
      "description": "Update the user-provided params.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/imagewmssource.js",
      "provides": [
        "ol.source.ImageWMS"
      ]
    },
    {
      "name": "ol.source.KML",
      "kind": "class",
      "description": "Static vector source in KML format",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/kmlsource.js",
      "provides": [
        "ol.source.KML"
      ]
    },
    {
      "name": "ol.source.MapGuide",
      "kind": "class",
      "description": "Source for images from Mapguide servers",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/mapguidesource.js",
      "provides": [
        "ol.source.MapGuide"
      ]
    },
    {
      "name": "ol.source.MapGuide#getParams",
      "kind": "function",
      "description": "Get the user-provided params, i.e. those passed to the constructor through\nthe \"params\" option, and possibly updated using the updateParams method.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/mapguidesource.js",
      "provides": [
        "ol.source.MapGuide"
      ]
    },
    {
      "name": "ol.source.MapGuide#updateParams",
      "kind": "function",
      "description": "Update the user-provided params.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/mapguidesource.js",
      "provides": [
        "ol.source.MapGuide"
      ]
    },
    {
      "name": "ol.source.MapQuest",
      "kind": "class",
      "description": "Layer source for the MapQuest tile server.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/mapquestsource.js",
      "provides": [
        "ol.source.MapQuest"
      ]
    },
    {
      "name": "ol.source.OSM",
      "kind": "class",
      "description": "Layer source for the OpenStreetMap tile server.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/osmsource.js",
      "provides": [
        "ol.source.OSM"
      ]
    },
    {
      "name": "ol.source.OSM.DATA_ATTRIBUTION",
      "kind": "constant",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/osmsource.js",
      "provides": [
        "ol.source.OSM"
      ]
    },
    {
      "name": "ol.source.OSM.TILE_ATTRIBUTION",
      "kind": "constant",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/osmsource.js",
      "provides": [
        "ol.source.OSM"
      ]
    },
    {
      "name": "ol.source.OSMXML",
      "kind": "class",
      "description": "Static vector source in OSMXML format",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/osmxmlsource.js",
      "provides": [
        "ol.source.OSMXML"
      ]
    },
    {
      "name": "ol.source.ServerVector",
      "kind": "class",
      "description": "A vector source in one of the supported formats, using a custom function to\nread in the data from a remote server.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/servervectorsource.js",
      "provides": [
        "ol.source.ServerVector"
      ]
    },
    {
      "name": "ol.source.ServerVector#readFeatures",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/servervectorsource.js",
      "provides": [
        "ol.source.ServerVector"
      ]
    },
    {
      "name": "ol.source.Source#getState",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/source.js",
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.Stamen",
      "kind": "class",
      "description": "Layer source for the Stamen tile server.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/stamensource.js",
      "provides": [
        "ol.source.Stamen"
      ]
    },
    {
      "name": "ol.source.StaticVector",
      "kind": "class",
      "description": "Abstract base class; normally only used for creating subclasses and not\ninstantiated in apps.\nBase class for vector sources in one of the supported formats, where the data\nis read from a file or other static source.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/staticvectorsource.js",
      "provides": [
        "ol.source.StaticVector"
      ]
    },
    {
      "name": "ol.source.TileImage",
      "kind": "class",
      "description": "Base class for sources providing images divided into a tile grid.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tileimagesource.js",
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.TileImage#getTileLoadFunction",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tileimagesource.js",
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.TileImage#getTileUrlFunction",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tileimagesource.js",
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.TileImage#setTileLoadFunction",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tileimagesource.js",
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.TileImage#setTileUrlFunction",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tileimagesource.js",
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.TileJSON",
      "kind": "class",
      "description": "Layer source for tile data in TileJSON format.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tilejsonsource.js",
      "provides": [
        "ol.source.TileJSON",
        "ol.tilejson"
      ]
    },
    {
      "name": "ol.source.Tile#getTileGrid",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tilesource.js",
      "provides": [
        "ol.source.Tile",
        "ol.source.TileOptions"
      ]
    },
    {
      "name": "ol.source.TileVector",
      "kind": "class",
      "description": "A vector source in one of the supported formats, where the data is divided\ninto tiles in a fixed grid pattern.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tilevectorsource.js",
      "provides": [
        "ol.source.TileVector"
      ]
    },
    {
      "name": "ol.source.TileWMS",
      "kind": "class",
      "description": "Layer source for tile data from WMS servers.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tilewmssource.js",
      "provides": [
        "ol.source.TileWMS"
      ]
    },
    {
      "name": "ol.source.TileWMS#getGetFeatureInfoUrl",
      "kind": "function",
      "description": "Return the GetFeatureInfo URL for the passed coordinate, resolution, and\nprojection. Return `undefined` if the GetFeatureInfo URL cannot be\nconstructed.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tilewmssource.js",
      "provides": [
        "ol.source.TileWMS"
      ]
    },
    {
      "name": "ol.source.TileWMS#getParams",
      "kind": "function",
      "description": "Get the user-provided params, i.e. those passed to the constructor through\nthe \"params\" option, and possibly updated using the updateParams method.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tilewmssource.js",
      "provides": [
        "ol.source.TileWMS"
      ]
    },
    {
      "name": "ol.source.TileWMS#getUrls",
      "kind": "function",
      "description": "Return the URLs used for this WMS source.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tilewmssource.js",
      "provides": [
        "ol.source.TileWMS"
      ]
    },
    {
      "name": "ol.source.TileWMS#setUrl",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tilewmssource.js",
      "provides": [
        "ol.source.TileWMS"
      ]
    },
    {
      "name": "ol.source.TileWMS#setUrls",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tilewmssource.js",
      "provides": [
        "ol.source.TileWMS"
      ]
    },
    {
      "name": "ol.source.TileWMS#updateParams",
      "kind": "function",
      "description": "Update the user-provided params.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tilewmssource.js",
      "provides": [
        "ol.source.TileWMS"
      ]
    },
    {
      "name": "ol.source.TopoJSON",
      "kind": "class",
      "description": "Static vector source in TopoJSON format",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/topojsonsource.js",
      "provides": [
        "ol.source.TopoJSON"
      ]
    },
    {
      "name": "ol.source.Vector",
      "kind": "class",
      "description": "Base class for vector sources.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.Vector#addFeature",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.Vector#addFeatures",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.Vector#clear",
      "kind": "function",
      "description": "Remove all features.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.Vector#forEachFeature",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.Vector#forEachFeatureInExtent",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.Vector#getFeatures",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.Vector#getFeaturesAtCoordinate",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.Vector#getClosestFeatureToCoordinate",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.Vector#getExtent",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.Vector#getFeatureById",
      "kind": "function",
      "description": "Get a feature by its identifier (the value returned by feature.getId()).\nNote that the index treats string and numeric identifiers as the same.  So\n`source.getFeatureById(2)` will return a feature with id `'2'` or `2`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.Vector#removeFeature",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.VectorEvent#feature",
      "kind": "member",
      "description": "The feature being added or removed.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.WMTS",
      "kind": "class",
      "description": "Layer source for tile data from WMTS servers.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/wmtssource.js",
      "provides": [
        "ol.source.WMTS",
        "ol.source.WMTSRequestEncoding"
      ]
    },
    {
      "name": "ol.source.WMTS#getDimensions",
      "kind": "function",
      "description": "Get the dimensions, i.e. those passed to the constructor through the\n\"dimensions\" option, and possibly updated using the updateDimensions\nmethod.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/wmtssource.js",
      "provides": [
        "ol.source.WMTS",
        "ol.source.WMTSRequestEncoding"
      ]
    },
    {
      "name": "ol.source.WMTS#updateDimensions",
      "kind": "function",
      "description": "Update the dimensions.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/wmtssource.js",
      "provides": [
        "ol.source.WMTS",
        "ol.source.WMTSRequestEncoding"
      ]
    },
    {
      "name": "ol.source.WMTS.optionsFromCapabilities",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/wmtssource.js",
      "provides": [
        "ol.source.WMTS",
        "ol.source.WMTSRequestEncoding"
      ]
    },
    {
      "name": "ol.source.XYZ",
      "kind": "class",
      "description": "Layer source for tile data with URLs in a set XYZ format.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/xyzsource.js",
      "provides": [
        "ol.source.XYZ"
      ]
    },
    {
      "name": "ol.source.XYZ#setTileUrlFunction",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/xyzsource.js",
      "provides": [
        "ol.source.XYZ"
      ]
    },
    {
      "name": "ol.source.XYZ#setUrl",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/xyzsource.js",
      "provides": [
        "ol.source.XYZ"
      ]
    },
    {
      "name": "ol.source.Zoomify",
      "kind": "class",
      "description": "Layer source for tile data in Zoomify format.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/zoomifysource.js",
      "provides": [
        "ol.source.Zoomify"
      ]
    },
    {
      "name": "ol.render.Event#vectorContext",
      "kind": "member",
      "description": "For canvas, this is an instance of {@link ol.render.canvas.Immediate}.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/render/renderevent.js",
      "provides": [
        "ol.render.Event",
        "ol.render.EventType"
      ]
    },
    {
      "name": "ol.render.Event#frameState",
      "kind": "member",
      "path": "/home/nd0ut/workspace/ol3/src/ol/render/renderevent.js",
      "provides": [
        "ol.render.Event",
        "ol.render.EventType"
      ]
    },
    {
      "name": "ol.render.Event#context",
      "kind": "member",
      "description": "Canvas context. Only available when a Canvas renderer is used, null\notherwise.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/render/renderevent.js",
      "provides": [
        "ol.render.Event",
        "ol.render.EventType"
      ]
    },
    {
      "name": "ol.render.Event#glContext",
      "kind": "member",
      "description": "WebGL context. Only available when a WebGL renderer is used, null\notherwise.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/render/renderevent.js",
      "provides": [
        "ol.render.Event",
        "ol.render.EventType"
      ]
    },
    {
      "name": "ol.render.canvas.Immediate#drawAsync",
      "kind": "function",
      "description": "Register a function to be called for rendering at a given zIndex.  The\nfunction will be called asynchronously.  The callback will receive a\nreference to {@link ol.render.canvas.Immediate} context for drawing.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/render/canvas/canvasimmediate.js",
      "provides": [
        "ol.render.canvas.Immediate"
      ]
    },
    {
      "name": "ol.render.canvas.Immediate#drawCircleGeometry",
      "kind": "function",
      "description": "Render a circle geometry into the canvas.  Rendering is immediate and uses\nthe current fill and stroke styles.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/render/canvas/canvasimmediate.js",
      "provides": [
        "ol.render.canvas.Immediate"
      ]
    },
    {
      "name": "ol.render.canvas.Immediate#drawFeature",
      "kind": "function",
      "description": "Render a feature into the canvas.  In order to respect the zIndex of the\nstyle this method draws asynchronously and thus *after* calls to\ndrawXxxxGeometry have been finished, effectively drawing the feature\n*on top* of everything else.  You probably should be using\n{@link ol.FeatureOverlay} instead of calling this method directly.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/render/canvas/canvasimmediate.js",
      "provides": [
        "ol.render.canvas.Immediate"
      ]
    },
    {
      "name": "ol.render.canvas.Immediate#drawPointGeometry",
      "kind": "function",
      "description": "Render a Point geometry into the canvas.  Rendering is immediate and uses\nthe current style.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/render/canvas/canvasimmediate.js",
      "provides": [
        "ol.render.canvas.Immediate"
      ]
    },
    {
      "name": "ol.render.canvas.Immediate#drawMultiPointGeometry",
      "kind": "function",
      "description": "Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\nuses the current style.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/render/canvas/canvasimmediate.js",
      "provides": [
        "ol.render.canvas.Immediate"
      ]
    },
    {
      "name": "ol.render.canvas.Immediate#drawLineStringGeometry",
      "kind": "function",
      "description": "Render a LineString into the canvas.  Rendering is immediate and uses\nthe current style.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/render/canvas/canvasimmediate.js",
      "provides": [
        "ol.render.canvas.Immediate"
      ]
    },
    {
      "name": "ol.render.canvas.Immediate#drawMultiLineStringGeometry",
      "kind": "function",
      "description": "Render a MultiLineString geometry into the canvas.  Rendering is immediate\nand uses the current style.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/render/canvas/canvasimmediate.js",
      "provides": [
        "ol.render.canvas.Immediate"
      ]
    },
    {
      "name": "ol.render.canvas.Immediate#drawPolygonGeometry",
      "kind": "function",
      "description": "Render a Polygon geometry into the canvas.  Rendering is immediate and uses\nthe current style.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/render/canvas/canvasimmediate.js",
      "provides": [
        "ol.render.canvas.Immediate"
      ]
    },
    {
      "name": "ol.render.canvas.Immediate#drawMultiPolygonGeometry",
      "kind": "function",
      "description": "Render MultiPolygon geometry into the canvas.  Rendering is immediate and\nuses the current style.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/render/canvas/canvasimmediate.js",
      "provides": [
        "ol.render.canvas.Immediate"
      ]
    },
    {
      "name": "ol.render.canvas.Immediate#setFillStrokeStyle",
      "kind": "function",
      "description": "Set the fill and stroke style for subsequent draw operations.  To clear\neither fill or stroke styles, pass null for the appropriate parameter.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/render/canvas/canvasimmediate.js",
      "provides": [
        "ol.render.canvas.Immediate"
      ]
    },
    {
      "name": "ol.render.canvas.Immediate#setImageStyle",
      "kind": "function",
      "description": "Set the image style for subsequent draw operations.  Pass null to remove\nthe image style.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/render/canvas/canvasimmediate.js",
      "provides": [
        "ol.render.canvas.Immediate"
      ]
    },
    {
      "name": "ol.render.canvas.Immediate#setTextStyle",
      "kind": "function",
      "description": "Set the text style for subsequent draw operations.  Pass null to\nremove the text style.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/render/canvas/canvasimmediate.js",
      "provides": [
        "ol.render.canvas.Immediate"
      ]
    },
    {
      "name": "ol.proj.CH",
      "kind": "class",
      "description": "Internal base class for Swiss grid projections.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/proj/chprojection.js",
      "provides": [
        "ol.proj.CH",
        "ol.proj.EPSG2056",
        "ol.proj.EPSG21781"
      ]
    },
    {
      "name": "ol.proj.EPSG2056",
      "kind": "class",
      "description": "The EPSG:2056 projection, also known as LV95 (CH1903+).",
      "path": "/home/nd0ut/workspace/ol3/src/ol/proj/chprojection.js",
      "provides": [
        "ol.proj.CH",
        "ol.proj.EPSG2056",
        "ol.proj.EPSG21781"
      ]
    },
    {
      "name": "ol.proj.EPSG21781",
      "kind": "class",
      "description": "The EPSG:21781 projection, also known as LV03 (CH1903).",
      "path": "/home/nd0ut/workspace/ol3/src/ol/proj/chprojection.js",
      "provides": [
        "ol.proj.CH",
        "ol.proj.EPSG2056",
        "ol.proj.EPSG21781"
      ]
    },
    {
      "name": "ol.proj.common.add",
      "kind": "function",
      "description": "FIXME empty description for jsdoc",
      "path": "/home/nd0ut/workspace/ol3/src/ol/proj/common.js",
      "provides": [
        "ol.proj.common"
      ]
    },
    {
      "name": "ol.proj.METERS_PER_UNIT",
      "kind": "constant",
      "description": "Meters per unit lookup table.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/proj/proj.js",
      "provides": [
        "ol.proj",
        "ol.proj.METERS_PER_UNIT",
        "ol.proj.Projection",
        "ol.proj.ProjectionLike",
        "ol.proj.Units"
      ]
    },
    {
      "name": "ol.proj.Projection",
      "kind": "class",
      "description": "Projection definition class. One of these is created for each projection\nsupported in the application and stored in the {@link ol.proj} namespace.\nYou can use these in applications, but this is not required, as API params\nand options use {@link ol.proj.ProjectionLike} which means the simple string\ncode will suffice.\n\nYou can use {@link ol.proj.get} to retrieve the object for a particular\nprojection.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/proj/proj.js",
      "provides": [
        "ol.proj",
        "ol.proj.METERS_PER_UNIT",
        "ol.proj.Projection",
        "ol.proj.ProjectionLike",
        "ol.proj.Units"
      ]
    },
    {
      "name": "ol.proj.Projection#getCode",
      "kind": "function",
      "description": "Get the code for this projection, e.g. 'EPSG:4326'.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/proj/proj.js",
      "provides": [
        "ol.proj",
        "ol.proj.METERS_PER_UNIT",
        "ol.proj.Projection",
        "ol.proj.ProjectionLike",
        "ol.proj.Units"
      ]
    },
    {
      "name": "ol.proj.Projection#getExtent",
      "kind": "function",
      "description": "Get the validity extent for this projection.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/proj/proj.js",
      "provides": [
        "ol.proj",
        "ol.proj.METERS_PER_UNIT",
        "ol.proj.Projection",
        "ol.proj.ProjectionLike",
        "ol.proj.Units"
      ]
    },
    {
      "name": "ol.proj.Projection#getUnits",
      "kind": "function",
      "description": "Get the units of this projection.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/proj/proj.js",
      "provides": [
        "ol.proj",
        "ol.proj.METERS_PER_UNIT",
        "ol.proj.Projection",
        "ol.proj.ProjectionLike",
        "ol.proj.Units"
      ]
    },
    {
      "name": "ol.proj.Projection#setExtent",
      "kind": "function",
      "description": "Set the validity extent for this projection.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/proj/proj.js",
      "provides": [
        "ol.proj",
        "ol.proj.METERS_PER_UNIT",
        "ol.proj.Projection",
        "ol.proj.ProjectionLike",
        "ol.proj.Units"
      ]
    },
    {
      "name": "ol.proj.addEquivalentProjections",
      "kind": "function",
      "description": "Registers transformation functions that don't alter coordinates. Those allow\nto transform between projections with equal meaning.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/proj/proj.js",
      "provides": [
        "ol.proj",
        "ol.proj.METERS_PER_UNIT",
        "ol.proj.Projection",
        "ol.proj.ProjectionLike",
        "ol.proj.Units"
      ]
    },
    {
      "name": "ol.proj.addProjection",
      "kind": "function",
      "description": "Add a Projection object to the list of supported projections.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/proj/proj.js",
      "provides": [
        "ol.proj",
        "ol.proj.METERS_PER_UNIT",
        "ol.proj.Projection",
        "ol.proj.ProjectionLike",
        "ol.proj.Units"
      ]
    },
    {
      "name": "ol.proj.addCoordinateTransforms",
      "kind": "function",
      "description": "Registers coordinate transform functions to convert coordinates between the\nsource projection and the destination projection.\nThe forward and inverse functions convert coordinate pairs; this function\nconverts these into the functions used internally which also handle\nextents and coordinate arrays.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/proj/proj.js",
      "provides": [
        "ol.proj",
        "ol.proj.METERS_PER_UNIT",
        "ol.proj.Projection",
        "ol.proj.ProjectionLike",
        "ol.proj.Units"
      ]
    },
    {
      "name": "ol.proj.get",
      "kind": "function",
      "description": "Fetches a Projection object for the code specified.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/proj/proj.js",
      "provides": [
        "ol.proj",
        "ol.proj.METERS_PER_UNIT",
        "ol.proj.Projection",
        "ol.proj.ProjectionLike",
        "ol.proj.Units"
      ]
    },
    {
      "name": "ol.proj.getTransform",
      "kind": "function",
      "description": "Given the projection-like objects, searches for a transformation\nfunction to convert a coordinates array from the source projection to the\ndestination projection.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/proj/proj.js",
      "provides": [
        "ol.proj",
        "ol.proj.METERS_PER_UNIT",
        "ol.proj.Projection",
        "ol.proj.ProjectionLike",
        "ol.proj.Units"
      ]
    },
    {
      "name": "ol.proj.transform",
      "kind": "function",
      "description": "Transforms a coordinate from source projection to destination projection.\nThis returns a new coordinate (and does not modify the original).\n\nSee {@link ol.proj.transformExtent} for extent transformation.\nSee the transform method of {@link ol.geom.Geometry} and its subclasses for\ngeometry transforms.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/proj/proj.js",
      "provides": [
        "ol.proj",
        "ol.proj.METERS_PER_UNIT",
        "ol.proj.Projection",
        "ol.proj.ProjectionLike",
        "ol.proj.Units"
      ]
    },
    {
      "name": "ol.proj.transformExtent",
      "kind": "function",
      "description": "Transforms an extent from source projection to destination projection.  This\nreturns a new extent (and does not modify the original).",
      "path": "/home/nd0ut/workspace/ol3/src/ol/proj/proj.js",
      "provides": [
        "ol.proj",
        "ol.proj.METERS_PER_UNIT",
        "ol.proj.Projection",
        "ol.proj.ProjectionLike",
        "ol.proj.Units"
      ]
    },
    {
      "name": "ol.layer.Heatmap",
      "kind": "class",
      "description": "Layer for rendering vector data as a heatmap.\nNote that any property set in the options is set as a {@link ol.Object}\nproperty on the layer object; for example, setting `title: 'My Title'` in the\noptions means that `title` is observable, and has get/set accessors.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/heatmaplayer.js",
      "provides": [
        "ol.layer.Heatmap"
      ]
    },
    {
      "name": "ol.layer.Heatmap#getGradient",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/heatmaplayer.js",
      "provides": [
        "ol.layer.Heatmap"
      ]
    },
    {
      "name": "ol.layer.Heatmap#setGradient",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/heatmaplayer.js",
      "provides": [
        "ol.layer.Heatmap"
      ]
    },
    {
      "name": "ol.layer.Image",
      "kind": "class",
      "description": "Server-rendered images that are available for arbitrary extents and\nresolutions.\nNote that any property set in the options is set as a {@link ol.Object}\nproperty on the layer object; for example, setting `title: 'My Title'` in the\noptions means that `title` is observable, and has get/set accessors.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/imagelayer.js",
      "provides": [
        "ol.layer.Image"
      ]
    },
    {
      "name": "ol.layer.Layer",
      "kind": "class",
      "description": "Abstract base class; normally only used for creating subclasses and not\ninstantiated in apps.\nA visual representation of raster or vector map data.\nLayers group together those properties that pertain to how the data is to be\ndisplayed, irrespective of the source of that data.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layer.js",
      "provides": [
        "ol.layer.Layer"
      ]
    },
    {
      "name": "ol.layer.Layer#getSource",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layer.js",
      "provides": [
        "ol.layer.Layer"
      ]
    },
    {
      "name": "ol.layer.Base#getBrightness",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Base#getContrast",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Base#getHue",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Base#getMaxResolution",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Base#getMinResolution",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Base#getOpacity",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Base#getSaturation",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Base#getVisible",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Base#setBrightness",
      "kind": "function",
      "description": "Adjust the layer brightness.  A value of -1 will render the layer completely\nblack.  A value of 0 will leave the brightness unchanged.  A value of 1 will\nrender the layer completely white.  Other values are linear multipliers on\nthe effect (values are clamped between -1 and 1).\n\nThe filter effects draft [1] says the brightness function is supposed to\nrender 0 black, 1 unchanged, and all other values as a linear multiplier.\n\nThe current WebKit implementation clamps values between -1 (black) and 1\n(white) [2].  There is a bug open to change the filter effect spec [3].\n\nTODO: revisit this if the spec is still unmodified before we release\n\n[1] https://dvcs.w3.org/hg/FXTF/raw-file/tip/filters/index.html\n[2] https://github.com/WebKit/webkit/commit/8f4765e569\n[3] https://www.w3.org/Bugs/Public/show_bug.cgi?id=15647",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Base#setContrast",
      "kind": "function",
      "description": "Adjust the layer contrast.  A value of 0 will render the layer completely\ngrey.  A value of 1 will leave the contrast unchanged.  Other values are\nlinear multipliers on the effect (and values over 1 are permitted).",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Base#setHue",
      "kind": "function",
      "description": "Apply a hue-rotation to the layer.  A value of 0 will leave the hue\nunchanged.  Other values are radians around the color circle.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Base#setMaxResolution",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Base#setMinResolution",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Base#setOpacity",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Base#setSaturation",
      "kind": "function",
      "description": "Adjust layer saturation.  A value of 0 will render the layer completely\nunsaturated.  A value of 1 will leave the saturation unchanged.  Other\nvalues are linear multipliers of the effect (and values over 1 are\npermitted).",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Base#setVisible",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Group",
      "kind": "class",
      "description": "A {@link ol.Collection} of layers that are handled together.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layergroup.js",
      "provides": [
        "ol.layer.Group"
      ]
    },
    {
      "name": "ol.layer.Tile",
      "kind": "class",
      "description": "For layer sources that provide pre-rendered, tiled images in grids that are\norganized by zoom levels for specific resolutions.\nNote that any property set in the options is set as a {@link ol.Object}\nproperty on the layer object; for example, setting `title: 'My Title'` in the\noptions means that `title` is observable, and has get/set accessors.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/tilelayer.js",
      "provides": [
        "ol.layer.Tile"
      ]
    },
    {
      "name": "ol.layer.Vector",
      "kind": "class",
      "description": "Vector data that is rendered client-side.\nNote that any property set in the options is set as a {@link ol.Object}\nproperty on the layer object; for example, setting `title: 'My Title'` in the\noptions means that `title` is observable, and has get/set accessors.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/vectorlayer.js",
      "provides": [
        "ol.layer.Vector"
      ]
    },
    {
      "name": "ol.layer.Vector#getStyle",
      "kind": "function",
      "description": "Get the style for features.  This returns whatever was passed to the `style`\noption at construction or to the `setStyle` method.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/vectorlayer.js",
      "provides": [
        "ol.layer.Vector"
      ]
    },
    {
      "name": "ol.layer.Vector#getStyleFunction",
      "kind": "function",
      "description": "Get the style function.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/vectorlayer.js",
      "provides": [
        "ol.layer.Vector"
      ]
    },
    {
      "name": "ol.layer.Vector#setStyle",
      "kind": "function",
      "description": "Set the style for features.  This can be a single style object, an array\nof styles, or a function that takes a feature and resolution and returns\nan array of styles.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/vectorlayer.js",
      "provides": [
        "ol.layer.Vector"
      ]
    },
    {
      "name": "ol.interaction.DoubleClickZoom",
      "kind": "class",
      "description": "Allows the user to zoom by double-clicking on the map.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/interaction/doubleclickzoominteraction.js",
      "provides": [
        "ol.interaction.DoubleClickZoom"
      ]
    },
    {
      "name": "ol.interaction.DragAndDrop",
      "kind": "class",
      "description": "Handles input of vector data by drag and drop.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/interaction/draganddropinteraction.js",
      "provides": [
        "ol.interaction.DragAndDrop",
        "ol.interaction.DragAndDropEvent"
      ]
    },
    {
      "name": "ol.interaction.DragAndDropEvent#features",
      "kind": "member",
      "path": "/home/nd0ut/workspace/ol3/src/ol/interaction/draganddropinteraction.js",
      "provides": [
        "ol.interaction.DragAndDrop",
        "ol.interaction.DragAndDropEvent"
      ]
    },
    {
      "name": "ol.interaction.DragAndDropEvent#file",
      "kind": "member",
      "path": "/home/nd0ut/workspace/ol3/src/ol/interaction/draganddropinteraction.js",
      "provides": [
        "ol.interaction.DragAndDrop",
        "ol.interaction.DragAndDropEvent"
      ]
    },
    {
      "name": "ol.interaction.DragAndDropEvent#projection",
      "kind": "member",
      "path": "/home/nd0ut/workspace/ol3/src/ol/interaction/draganddropinteraction.js",
      "provides": [
        "ol.interaction.DragAndDrop",
        "ol.interaction.DragAndDropEvent"
      ]
    },
    {
      "name": "ol.DragBoxEvent#coordinate",
      "kind": "constant",
      "description": "The coordinate of the drag event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/interaction/dragboxinteraction.js",
      "provides": [
        "ol.DragBoxEvent",
        "ol.interaction.DragBox"
      ]
    },
    {
      "name": "ol.interaction.DragBox",
      "kind": "class",
      "description": "Allows the user to draw a vector box by clicking and dragging on the map,\nnormally combined with an {@link ol.events.condition} that limits\nit to when the shift or other key is held down. This is used, for example,\nfor zooming to a specific area of the map\n(see {@link ol.interaction.DragZoom} and\n{@link ol.interaction.DragRotateAndZoom}).\n\nThis interaction is only supported for mouse devices.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/interaction/dragboxinteraction.js",
      "provides": [
        "ol.DragBoxEvent",
        "ol.interaction.DragBox"
      ]
    },
    {
      "name": "ol.interaction.DragBox#getGeometry",
      "kind": "function",
      "description": "Returns geometry of last drawn box.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/interaction/dragboxinteraction.js",
      "provides": [
        "ol.DragBoxEvent",
        "ol.interaction.DragBox"
      ]
    },
    {
      "name": "ol.interaction.DragPan",
      "kind": "class",
      "description": "Allows the user to pan the map by dragging the map.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/interaction/dragpaninteraction.js",
      "provides": [
        "ol.interaction.DragPan"
      ]
    },
    {
      "name": "ol.interaction.DragRotateAndZoom",
      "kind": "class",
      "description": "Allows the user to zoom and rotate the map by clicking and dragging\non the map.  By default, this interaction is limited to when the shift\nkey is held down.\n\nThis interaction is only supported for mouse devices.\n\nAnd this interaction is not included in the default interactions.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/interaction/dragrotateandzoominteraction.js",
      "provides": [
        "ol.interaction.DragRotateAndZoom"
      ]
    },
    {
      "name": "ol.interaction.DragRotate",
      "kind": "class",
      "description": "Allows the user to rotate the map by clicking and dragging on the map,\nnormally combined with an {@link ol.events.condition} that limits\nit to when the alt and shift keys are held down.\n\nThis interaction is only supported for mouse devices.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/interaction/dragrotateinteraction.js",
      "provides": [
        "ol.interaction.DragRotate"
      ]
    },
    {
      "name": "ol.interaction.DragZoom",
      "kind": "class",
      "description": "Allows the user to zoom the map by clicking and dragging on the map,\nnormally combined with an {@link ol.events.condition} that limits\nit to when a key, shift by default, is held down.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/interaction/dragzoominteraction.js",
      "provides": [
        "ol.interaction.DragZoom"
      ]
    },
    {
      "name": "ol.DrawEvent#feature",
      "kind": "member",
      "description": "The feature being drawn.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/interaction/drawinteraction.js",
      "provides": [
        "ol.DrawEvent",
        "ol.interaction.Draw"
      ]
    },
    {
      "name": "ol.interaction.Draw",
      "kind": "class",
      "description": "Interaction that allows drawing geometries.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/interaction/drawinteraction.js",
      "provides": [
        "ol.DrawEvent",
        "ol.interaction.Draw"
      ]
    },
    {
      "name": "ol.interaction.defaults",
      "kind": "function",
      "description": "Set of interactions included in maps by default. Specific interactions can be\nexcluded by setting the appropriate option to false in the constructor\noptions, but the order of the interactions is fixed.  If you want to specify\na different order for interactions, you will need to create your own\n{@link ol.interaction.Interaction} instances and insert them into a\n{@link ol.Collection} in the order you want before creating your\n{@link ol.Map} instance. The default set of interactions, in sequence, is:\n* {@link ol.interaction.DragRotate}\n* {@link ol.interaction.DoubleClickZoom}\n* {@link ol.interaction.DragPan}\n* {@link ol.interaction.PinchRotate}\n* {@link ol.interaction.PinchZoom}\n* {@link ol.interaction.KeyboardPan}\n* {@link ol.interaction.KeyboardZoom}\n* {@link ol.interaction.MouseWheelZoom}\n* {@link ol.interaction.DragZoom}\n\nNote that DragZoom renders a box as a vector polygon, so this interaction\nshould be excluded if you want a build with no vector support.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/interaction/interactiondefaults.js",
      "provides": [
        "ol.interaction"
      ]
    },
    {
      "name": "ol.interaction.KeyboardPan",
      "kind": "class",
      "description": "Allows the user to pan the map using keyboard arrows.\nNote that, although this interaction is by default included in maps,\nthe keys can only be used when browser focus is on the element to which\nthe keyboard events are attached. By default, this is the map div,\nthough you can change this with the `keyboardEventTarget` in\n{@link ol.Map}. `document` never loses focus but, for any other element,\nfocus will have to be on, and returned to, this element if the keys are to\nfunction.\nSee also {@link ol.interaction.KeyboardZoom}.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/interaction/keyboardpaninteraction.js",
      "provides": [
        "ol.interaction.KeyboardPan"
      ]
    },
    {
      "name": "ol.interaction.KeyboardZoom",
      "kind": "class",
      "description": "Allows the user to zoom the map using keyboard + and -.\nNote that, although this interaction is by default included in maps,\nthe keys can only be used when browser focus is on the element to which\nthe keyboard events are attached. By default, this is the map div,\nthough you can change this with the `keyboardEventTarget` in\n{@link ol.Map}. `document` never loses focus but, for any other element,\nfocus will have to be on, and returned to, this element if the keys are to\nfunction.\nSee also {@link ol.interaction.KeyboardPan}.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/interaction/keyboardzoominteraction.js",
      "provides": [
        "ol.interaction.KeyboardZoom"
      ]
    },
    {
      "name": "ol.interaction.Modify",
      "kind": "class",
      "description": "Interaction for modifying vector data.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/interaction/modifyinteraction.js",
      "provides": [
        "ol.interaction.Modify"
      ]
    },
    {
      "name": "ol.interaction.MouseWheelZoom",
      "kind": "class",
      "description": "Allows the user to zoom the map by scrolling the mouse wheel.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/interaction/mousewheelzoominteraction.js",
      "provides": [
        "ol.interaction.MouseWheelZoom"
      ]
    },
    {
      "name": "ol.interaction.PinchRotate",
      "kind": "class",
      "description": "Allows the user to rotate the map by twisting with two fingers\non a touch screen.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/interaction/pinchrotateinteraction.js",
      "provides": [
        "ol.interaction.PinchRotate"
      ]
    },
    {
      "name": "ol.interaction.PinchZoom",
      "kind": "class",
      "description": "Allows the user to zoom the map by pinching with two fingers\non a touch screen.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/interaction/pinchzoominteraction.js",
      "provides": [
        "ol.interaction.PinchZoom"
      ]
    },
    {
      "name": "ol.interaction.Select",
      "kind": "class",
      "description": "Handles selection of vector data. A {@link ol.FeatureOverlay} is maintained\ninternally to store the selected feature(s). Which features are selected is\ndetermined by the `condition` option, and optionally the `toggle` or\n`add`/`remove` options.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/interaction/selectinteraction.js",
      "provides": [
        "ol.interaction.Select"
      ]
    },
    {
      "name": "ol.interaction.Select#getFeatures",
      "kind": "function",
      "description": "Get the selected features.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/interaction/selectinteraction.js",
      "provides": [
        "ol.interaction.Select"
      ]
    },
    {
      "name": "ol.interaction.Select#setMap",
      "kind": "function",
      "description": "Remove the interaction from its current map, if any,  and attach it to a new\nmap, if any. Pass `null` to just remove the interaction from the current map.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/interaction/selectinteraction.js",
      "provides": [
        "ol.interaction.Select"
      ]
    },
    {
      "name": "ol.geom.Circle",
      "kind": "class",
      "description": "Circle geometry.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/circle.js",
      "provides": [
        "ol.geom.Circle"
      ]
    },
    {
      "name": "ol.geom.Circle#clone",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/circle.js",
      "provides": [
        "ol.geom.Circle"
      ]
    },
    {
      "name": "ol.geom.Circle#getCenter",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/circle.js",
      "provides": [
        "ol.geom.Circle"
      ]
    },
    {
      "name": "ol.geom.Circle#getExtent",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/circle.js",
      "provides": [
        "ol.geom.Circle"
      ]
    },
    {
      "name": "ol.geom.Circle#getRadius",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/circle.js",
      "provides": [
        "ol.geom.Circle"
      ]
    },
    {
      "name": "ol.geom.Circle#getType",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/circle.js",
      "provides": [
        "ol.geom.Circle"
      ]
    },
    {
      "name": "ol.geom.Circle#setCenter",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/circle.js",
      "provides": [
        "ol.geom.Circle"
      ]
    },
    {
      "name": "ol.geom.Circle#setCenterAndRadius",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/circle.js",
      "provides": [
        "ol.geom.Circle"
      ]
    },
    {
      "name": "ol.geom.Circle#setRadius",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/circle.js",
      "provides": [
        "ol.geom.Circle"
      ]
    },
    {
      "name": "ol.geom.Geometry",
      "kind": "class",
      "description": "Abstract base class; normally only used for creating subclasses and not\ninstantiated in apps.\nBase class for vector geometries.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/geometry.js",
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.Geometry#clone",
      "kind": "function",
      "description": "Make a complete copy of the geometry.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/geometry.js",
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.Geometry#getClosestPoint",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/geometry.js",
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.Geometry#getExtent",
      "kind": "function",
      "description": "Get the extent of the geometry.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/geometry.js",
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.Geometry#getSimplifiedGeometry",
      "kind": "function",
      "description": "Create a simplified version of this geometry using the Douglas Peucker\nalgorithm.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/geometry.js",
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.Geometry#getType",
      "kind": "function",
      "description": "Get the type of this geometry.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/geometry.js",
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.Geometry#applyTransform",
      "kind": "function",
      "description": "Apply a transform function to the geometry.  Modifies the geometry in place.\nIf you do not want the geometry modified in place, first clone() it and\nthen use this function on the clone.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/geometry.js",
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.Geometry#transform",
      "kind": "function",
      "description": "Transform a geometry from one coordinate reference system to another.\nModifies the geometry in place.\nIf you do not want the geometry modified in place, first clone() it and\nthen use this function on the clone.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/geometry.js",
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.GeometryCollection",
      "kind": "class",
      "description": "An array of {@link ol.geom.Geometry} objects.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/geometrycollection.js",
      "provides": [
        "ol.geom.GeometryCollection"
      ]
    },
    {
      "name": "ol.geom.GeometryCollection#clone",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/geometrycollection.js",
      "provides": [
        "ol.geom.GeometryCollection"
      ]
    },
    {
      "name": "ol.geom.GeometryCollection#getExtent",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/geometrycollection.js",
      "provides": [
        "ol.geom.GeometryCollection"
      ]
    },
    {
      "name": "ol.geom.GeometryCollection#getGeometries",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/geometrycollection.js",
      "provides": [
        "ol.geom.GeometryCollection"
      ]
    },
    {
      "name": "ol.geom.GeometryCollection#getSimplifiedGeometry",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/geometrycollection.js",
      "provides": [
        "ol.geom.GeometryCollection"
      ]
    },
    {
      "name": "ol.geom.GeometryCollection#getType",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/geometrycollection.js",
      "provides": [
        "ol.geom.GeometryCollection"
      ]
    },
    {
      "name": "ol.geom.GeometryCollection#setGeometries",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/geometrycollection.js",
      "provides": [
        "ol.geom.GeometryCollection"
      ]
    },
    {
      "name": "ol.geom.LinearRing",
      "kind": "class",
      "description": "Linear ring geometry.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/linearring.js",
      "provides": [
        "ol.geom.LinearRing"
      ]
    },
    {
      "name": "ol.geom.LinearRing#clone",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/linearring.js",
      "provides": [
        "ol.geom.LinearRing"
      ]
    },
    {
      "name": "ol.geom.LinearRing#getArea",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/linearring.js",
      "provides": [
        "ol.geom.LinearRing"
      ]
    },
    {
      "name": "ol.geom.LinearRing#getCoordinates",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/linearring.js",
      "provides": [
        "ol.geom.LinearRing"
      ]
    },
    {
      "name": "ol.geom.LinearRing#getType",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/linearring.js",
      "provides": [
        "ol.geom.LinearRing"
      ]
    },
    {
      "name": "ol.geom.LinearRing#setCoordinates",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/linearring.js",
      "provides": [
        "ol.geom.LinearRing"
      ]
    },
    {
      "name": "ol.geom.LineString",
      "kind": "class",
      "description": "Linestring geometry.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/linestring.js",
      "provides": [
        "ol.geom.LineString"
      ]
    },
    {
      "name": "ol.geom.LineString#appendCoordinate",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/linestring.js",
      "provides": [
        "ol.geom.LineString"
      ]
    },
    {
      "name": "ol.geom.LineString#clone",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/linestring.js",
      "provides": [
        "ol.geom.LineString"
      ]
    },
    {
      "name": "ol.geom.LineString#getCoordinateAtM",
      "kind": "function",
      "description": "Returns the coordinate at `m` using linear interpolation, or `null` if no\nsuch coordinate exists.\n\n`opt_extrapolate` controls extrapolation beyond the range of Ms in the\nMultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\nM will return the first coordinate and Ms greater than the last M will\nreturn the last coordinate.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/linestring.js",
      "provides": [
        "ol.geom.LineString"
      ]
    },
    {
      "name": "ol.geom.LineString#getCoordinates",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/linestring.js",
      "provides": [
        "ol.geom.LineString"
      ]
    },
    {
      "name": "ol.geom.LineString#getLength",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/linestring.js",
      "provides": [
        "ol.geom.LineString"
      ]
    },
    {
      "name": "ol.geom.LineString#getType",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/linestring.js",
      "provides": [
        "ol.geom.LineString"
      ]
    },
    {
      "name": "ol.geom.LineString#setCoordinates",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/linestring.js",
      "provides": [
        "ol.geom.LineString"
      ]
    },
    {
      "name": "ol.geom.MultiLineString",
      "kind": "class",
      "description": "Multi-linestring geometry.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/multilinestring.js",
      "provides": [
        "ol.geom.MultiLineString"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#appendLineString",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/multilinestring.js",
      "provides": [
        "ol.geom.MultiLineString"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#clone",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/multilinestring.js",
      "provides": [
        "ol.geom.MultiLineString"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#getCoordinateAtM",
      "kind": "function",
      "description": "Returns the coordinate at `m` using linear interpolation, or `null` if no\nsuch coordinate exists.\n\n`opt_extrapolate` controls extrapolation beyond the range of Ms in the\nMultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\nM will return the first coordinate and Ms greater than the last M will\nreturn the last coordinate.\n\n`opt_interpolate` controls interpolation between consecutive LineStrings\nwithin the MultiLineString. If `opt_interpolate` is `true` the coordinates\nwill be linearly interpolated between the last coordinate of one LineString\nand the first coordinate of the next LineString.  If `opt_interpolate` is\n`false` then the function will return `null` for Ms falling between\nLineStrings.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/multilinestring.js",
      "provides": [
        "ol.geom.MultiLineString"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#getCoordinates",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/multilinestring.js",
      "provides": [
        "ol.geom.MultiLineString"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#getLineString",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/multilinestring.js",
      "provides": [
        "ol.geom.MultiLineString"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#getLineStrings",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/multilinestring.js",
      "provides": [
        "ol.geom.MultiLineString"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#getType",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/multilinestring.js",
      "provides": [
        "ol.geom.MultiLineString"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#setCoordinates",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/multilinestring.js",
      "provides": [
        "ol.geom.MultiLineString"
      ]
    },
    {
      "name": "ol.geom.MultiPoint",
      "kind": "class",
      "description": "Multi-point geometry.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/multipoint.js",
      "provides": [
        "ol.geom.MultiPoint"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#appendPoint",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/multipoint.js",
      "provides": [
        "ol.geom.MultiPoint"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#clone",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/multipoint.js",
      "provides": [
        "ol.geom.MultiPoint"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#getCoordinates",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/multipoint.js",
      "provides": [
        "ol.geom.MultiPoint"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#getPoint",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/multipoint.js",
      "provides": [
        "ol.geom.MultiPoint"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#getPoints",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/multipoint.js",
      "provides": [
        "ol.geom.MultiPoint"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#getType",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/multipoint.js",
      "provides": [
        "ol.geom.MultiPoint"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#setCoordinates",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/multipoint.js",
      "provides": [
        "ol.geom.MultiPoint"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon",
      "kind": "class",
      "description": "Multi-polygon geometry.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/multipolygon.js",
      "provides": [
        "ol.geom.MultiPolygon"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#appendPolygon",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/multipolygon.js",
      "provides": [
        "ol.geom.MultiPolygon"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#clone",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/multipolygon.js",
      "provides": [
        "ol.geom.MultiPolygon"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#getArea",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/multipolygon.js",
      "provides": [
        "ol.geom.MultiPolygon"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#getCoordinates",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/multipolygon.js",
      "provides": [
        "ol.geom.MultiPolygon"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#getInteriorPoints",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/multipolygon.js",
      "provides": [
        "ol.geom.MultiPolygon"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#getPolygon",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/multipolygon.js",
      "provides": [
        "ol.geom.MultiPolygon"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#getPolygons",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/multipolygon.js",
      "provides": [
        "ol.geom.MultiPolygon"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#getType",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/multipolygon.js",
      "provides": [
        "ol.geom.MultiPolygon"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#setCoordinates",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/multipolygon.js",
      "provides": [
        "ol.geom.MultiPolygon"
      ]
    },
    {
      "name": "ol.geom.Point",
      "kind": "class",
      "description": "Point geometry.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/point.js",
      "provides": [
        "ol.geom.Point"
      ]
    },
    {
      "name": "ol.geom.Point#clone",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/point.js",
      "provides": [
        "ol.geom.Point"
      ]
    },
    {
      "name": "ol.geom.Point#getCoordinates",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/point.js",
      "provides": [
        "ol.geom.Point"
      ]
    },
    {
      "name": "ol.geom.Point#getType",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/point.js",
      "provides": [
        "ol.geom.Point"
      ]
    },
    {
      "name": "ol.geom.Point#setCoordinates",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/point.js",
      "provides": [
        "ol.geom.Point"
      ]
    },
    {
      "name": "ol.geom.Polygon",
      "kind": "class",
      "description": "Polygon geometry.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/polygon.js",
      "provides": [
        "ol.geom.Polygon"
      ]
    },
    {
      "name": "ol.geom.Polygon#appendLinearRing",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/polygon.js",
      "provides": [
        "ol.geom.Polygon"
      ]
    },
    {
      "name": "ol.geom.Polygon#clone",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/polygon.js",
      "provides": [
        "ol.geom.Polygon"
      ]
    },
    {
      "name": "ol.geom.Polygon#getArea",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/polygon.js",
      "provides": [
        "ol.geom.Polygon"
      ]
    },
    {
      "name": "ol.geom.Polygon#getCoordinates",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/polygon.js",
      "provides": [
        "ol.geom.Polygon"
      ]
    },
    {
      "name": "ol.geom.Polygon#getInteriorPoint",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/polygon.js",
      "provides": [
        "ol.geom.Polygon"
      ]
    },
    {
      "name": "ol.geom.Polygon#getLinearRing",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/polygon.js",
      "provides": [
        "ol.geom.Polygon"
      ]
    },
    {
      "name": "ol.geom.Polygon#getLinearRings",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/polygon.js",
      "provides": [
        "ol.geom.Polygon"
      ]
    },
    {
      "name": "ol.geom.Polygon#getType",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/polygon.js",
      "provides": [
        "ol.geom.Polygon"
      ]
    },
    {
      "name": "ol.geom.Polygon#setCoordinates",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/polygon.js",
      "provides": [
        "ol.geom.Polygon"
      ]
    },
    {
      "name": "ol.geom.Polygon.circular",
      "kind": "function",
      "description": "Create an approximation of a circle on the surface of a sphere.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/polygon.js",
      "provides": [
        "ol.geom.Polygon"
      ]
    },
    {
      "name": "ol.geom.SimpleGeometry",
      "kind": "class",
      "description": "Abstract base class; normally only used for creating subclasses and not\ninstantiated in apps.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.SimpleGeometry#getExtent",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.SimpleGeometry#getFirstCoordinate",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.SimpleGeometry#getLastCoordinate",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.SimpleGeometry#getLayout",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.SimpleGeometry#getSimplifiedGeometry",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.format.GeoJSON",
      "kind": "class",
      "description": "Feature format for reading and writing data in the GeoJSON format.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/geojsonformat.js",
      "provides": [
        "ol.format.GeoJSON"
      ]
    },
    {
      "name": "ol.format.GeoJSON#readFeature",
      "kind": "function",
      "description": "Read a feature from a GeoJSON Feature source.  This method will throw\nan error if used with a FeatureCollection source.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/geojsonformat.js",
      "provides": [
        "ol.format.GeoJSON"
      ]
    },
    {
      "name": "ol.format.GeoJSON#readFeatures",
      "kind": "function",
      "description": "Read all features from a GeoJSON source.  Works with both Feature and\nFeatureCollection sources.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/geojsonformat.js",
      "provides": [
        "ol.format.GeoJSON"
      ]
    },
    {
      "name": "ol.format.GeoJSON#readGeometry",
      "kind": "function",
      "description": "Read a geometry from a GeoJSON source.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/geojsonformat.js",
      "provides": [
        "ol.format.GeoJSON"
      ]
    },
    {
      "name": "ol.format.GeoJSON#readProjection",
      "kind": "function",
      "description": "Read the projection from a GeoJSON source.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/geojsonformat.js",
      "provides": [
        "ol.format.GeoJSON"
      ]
    },
    {
      "name": "ol.format.GeoJSON#writeFeature",
      "kind": "function",
      "description": "Encode a feature as a GeoJSON Feature object.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/geojsonformat.js",
      "provides": [
        "ol.format.GeoJSON"
      ]
    },
    {
      "name": "ol.format.GeoJSON#writeFeatures",
      "kind": "function",
      "description": "Encode an array of features as GeoJSON.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/geojsonformat.js",
      "provides": [
        "ol.format.GeoJSON"
      ]
    },
    {
      "name": "ol.format.GeoJSON#writeGeometry",
      "kind": "function",
      "description": "Encode a geometry as GeoJSON.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/geojsonformat.js",
      "provides": [
        "ol.format.GeoJSON"
      ]
    },
    {
      "name": "ol.format.GML",
      "kind": "class",
      "description": "Feature format for reading and writing data in the GML format.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/gmlformat.js",
      "provides": [
        "ol.format.GML"
      ]
    },
    {
      "name": "ol.format.GML#readFeatures",
      "kind": "function",
      "description": "Read all features from a GML FeatureCollection.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/gmlformat.js",
      "provides": [
        "ol.format.GML"
      ]
    },
    {
      "name": "ol.format.GML#writeFeatures",
      "kind": "function",
      "description": "Encode an array of features in GML 3.1.1 Simple Features.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/gmlformat.js",
      "provides": [
        "ol.format.GML"
      ]
    },
    {
      "name": "ol.format.GPX",
      "kind": "class",
      "description": "Feature format for reading and writing data in the GPX format.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/gpxformat.js",
      "provides": [
        "ol.format.GPX",
        "ol.format.GPX.V1_1"
      ]
    },
    {
      "name": "ol.format.GPX#readFeature",
      "kind": "function",
      "description": "Read the first feature from a GPX source.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/gpxformat.js",
      "provides": [
        "ol.format.GPX",
        "ol.format.GPX.V1_1"
      ]
    },
    {
      "name": "ol.format.GPX#readFeatures",
      "kind": "function",
      "description": "Read all features from a GPX source.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/gpxformat.js",
      "provides": [
        "ol.format.GPX",
        "ol.format.GPX.V1_1"
      ]
    },
    {
      "name": "ol.format.GPX#readProjection",
      "kind": "function",
      "description": "Read the projection from a GPX source.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/gpxformat.js",
      "provides": [
        "ol.format.GPX",
        "ol.format.GPX.V1_1"
      ]
    },
    {
      "name": "ol.format.GPX#writeFeatures",
      "kind": "function",
      "description": "Encode an array of features in the GPX format.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/gpxformat.js",
      "provides": [
        "ol.format.GPX",
        "ol.format.GPX.V1_1"
      ]
    },
    {
      "name": "ol.format.IGC",
      "kind": "class",
      "description": "Feature format for `*.igc` flight recording files.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/igcformat.js",
      "provides": [
        "ol.format.IGC",
        "ol.format.IGCZ"
      ]
    },
    {
      "name": "ol.format.IGC#readFeature",
      "kind": "function",
      "description": "Read the feature from the IGC source.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/igcformat.js",
      "provides": [
        "ol.format.IGC",
        "ol.format.IGCZ"
      ]
    },
    {
      "name": "ol.format.IGC#readFeatures",
      "kind": "function",
      "description": "Read the feature from the source. As IGC sources contain a single\nfeature, this will return the feature in an array.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/igcformat.js",
      "provides": [
        "ol.format.IGC",
        "ol.format.IGCZ"
      ]
    },
    {
      "name": "ol.format.IGC#readProjection",
      "kind": "function",
      "description": "Read the projection from the IGC source.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/igcformat.js",
      "provides": [
        "ol.format.IGC",
        "ol.format.IGCZ"
      ]
    },
    {
      "name": "ol.format.KML",
      "kind": "class",
      "description": "Feature format for reading and writing data in the KML format.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/kmlformat.js",
      "provides": [
        "ol.format.KML"
      ]
    },
    {
      "name": "ol.format.KML#readFeature",
      "kind": "function",
      "description": "Read the first feature from a KML source.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/kmlformat.js",
      "provides": [
        "ol.format.KML"
      ]
    },
    {
      "name": "ol.format.KML#readFeatures",
      "kind": "function",
      "description": "Read all features from a KML source.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/kmlformat.js",
      "provides": [
        "ol.format.KML"
      ]
    },
    {
      "name": "ol.format.KML#readName",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/kmlformat.js",
      "provides": [
        "ol.format.KML"
      ]
    },
    {
      "name": "ol.format.KML#readProjection",
      "kind": "function",
      "description": "Read the projection from a KML source.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/kmlformat.js",
      "provides": [
        "ol.format.KML"
      ]
    },
    {
      "name": "ol.format.KML#writeFeatures",
      "kind": "function",
      "description": "Encode an array of features in the KML format.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/kmlformat.js",
      "provides": [
        "ol.format.KML"
      ]
    },
    {
      "name": "ol.format.OSMXML",
      "kind": "class",
      "description": "Feature format for reading and writing data in the OSMXML format.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/osmxmlformat.js",
      "provides": [
        "ol.format.OSMXML"
      ]
    },
    {
      "name": "ol.format.OSMXML#readFeatures",
      "kind": "function",
      "description": "Read all features from an OSM source.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/osmxmlformat.js",
      "provides": [
        "ol.format.OSMXML"
      ]
    },
    {
      "name": "ol.format.OSMXML#readProjection",
      "kind": "function",
      "description": "Read the projection from an OSM source.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/osmxmlformat.js",
      "provides": [
        "ol.format.OSMXML"
      ]
    },
    {
      "name": "ol.format.Polyline",
      "kind": "class",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/polylineformat.js",
      "provides": [
        "ol.format.Polyline"
      ]
    },
    {
      "name": "ol.format.Polyline.encodeDeltas",
      "kind": "function",
      "description": "Encode a list of n-dimensional points and return an encoded string\n\nAttention: This function will modify the passed array!",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/polylineformat.js",
      "provides": [
        "ol.format.Polyline"
      ]
    },
    {
      "name": "ol.format.Polyline.decodeDeltas",
      "kind": "function",
      "description": "Decode a list of n-dimensional points from an encoded string",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/polylineformat.js",
      "provides": [
        "ol.format.Polyline"
      ]
    },
    {
      "name": "ol.format.Polyline.encodeFloats",
      "kind": "function",
      "description": "Encode a list of floating point numbers and return an encoded string\n\nAttention: This function will modify the passed array!",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/polylineformat.js",
      "provides": [
        "ol.format.Polyline"
      ]
    },
    {
      "name": "ol.format.Polyline.decodeFloats",
      "kind": "function",
      "description": "Decode a list of floating point numbers from an encoded string",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/polylineformat.js",
      "provides": [
        "ol.format.Polyline"
      ]
    },
    {
      "name": "ol.format.Polyline#readFeature",
      "kind": "function",
      "description": "Read the feature from the Polyline source.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/polylineformat.js",
      "provides": [
        "ol.format.Polyline"
      ]
    },
    {
      "name": "ol.format.Polyline#readFeatures",
      "kind": "function",
      "description": "Read the feature from the source. As Polyline sources contain a single\nfeature, this will return the feature in an array.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/polylineformat.js",
      "provides": [
        "ol.format.Polyline"
      ]
    },
    {
      "name": "ol.format.Polyline#readGeometry",
      "kind": "function",
      "description": "Read the geometry from the source.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/polylineformat.js",
      "provides": [
        "ol.format.Polyline"
      ]
    },
    {
      "name": "ol.format.Polyline#readProjection",
      "kind": "function",
      "description": "Read the projection from a Polyline source.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/polylineformat.js",
      "provides": [
        "ol.format.Polyline"
      ]
    },
    {
      "name": "ol.format.Polyline#writeGeometry",
      "kind": "function",
      "description": "Write a single geometry in Polyline format.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/polylineformat.js",
      "provides": [
        "ol.format.Polyline"
      ]
    },
    {
      "name": "ol.format.TopoJSON",
      "kind": "class",
      "description": "Feature format for reading and writing data in the TopoJSON format.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/topojsonformat.js",
      "provides": [
        "ol.format.TopoJSON"
      ]
    },
    {
      "name": "ol.format.TopoJSON#readFeatures",
      "kind": "function",
      "description": "Read all features from a TopoJSON source.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/topojsonformat.js",
      "provides": [
        "ol.format.TopoJSON"
      ]
    },
    {
      "name": "ol.format.TopoJSON#readProjection",
      "kind": "function",
      "description": "Read the projection from a TopoJSON source.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/topojsonformat.js",
      "provides": [
        "ol.format.TopoJSON"
      ]
    },
    {
      "name": "ol.format.WFS",
      "kind": "class",
      "description": "Feature format for reading and writing data in the WFS format.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/wfsformat.js",
      "provides": [
        "ol.format.WFS"
      ]
    },
    {
      "name": "ol.format.WFS#readFeatures",
      "kind": "function",
      "description": "Read all features from a WFS FeatureCollection.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/wfsformat.js",
      "provides": [
        "ol.format.WFS"
      ]
    },
    {
      "name": "ol.format.WFS#readTransactionResponse",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/wfsformat.js",
      "provides": [
        "ol.format.WFS"
      ]
    },
    {
      "name": "ol.format.WFS#readFeatureCollectionMetadata",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/wfsformat.js",
      "provides": [
        "ol.format.WFS"
      ]
    },
    {
      "name": "ol.format.WFS#writeGetFeature",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/wfsformat.js",
      "provides": [
        "ol.format.WFS"
      ]
    },
    {
      "name": "ol.format.WFS#writeTransaction",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/wfsformat.js",
      "provides": [
        "ol.format.WFS"
      ]
    },
    {
      "name": "ol.format.WFS#readProjection",
      "kind": "function",
      "description": "Read the projection from a WFS source.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/wfsformat.js",
      "provides": [
        "ol.format.WFS"
      ]
    },
    {
      "name": "ol.format.WKT",
      "kind": "class",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/wktformat.js",
      "provides": [
        "ol.format.WKT"
      ]
    },
    {
      "name": "ol.format.WKT#readFeature",
      "kind": "function",
      "description": "Read a feature from a WKT source.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/wktformat.js",
      "provides": [
        "ol.format.WKT"
      ]
    },
    {
      "name": "ol.format.WKT#readFeatures",
      "kind": "function",
      "description": "Read all features from a WKT source.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/wktformat.js",
      "provides": [
        "ol.format.WKT"
      ]
    },
    {
      "name": "ol.format.WKT#readGeometry",
      "kind": "function",
      "description": "Read a single geometry from a WKT source.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/wktformat.js",
      "provides": [
        "ol.format.WKT"
      ]
    },
    {
      "name": "ol.format.WKT#writeFeature",
      "kind": "function",
      "description": "Encode a feature as a WKT string.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/wktformat.js",
      "provides": [
        "ol.format.WKT"
      ]
    },
    {
      "name": "ol.format.WKT#writeFeatures",
      "kind": "function",
      "description": "Encode an array of features as a WKT string.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/wktformat.js",
      "provides": [
        "ol.format.WKT"
      ]
    },
    {
      "name": "ol.format.WKT#writeGeometry",
      "kind": "function",
      "description": "Write a single geometry as a WKT string.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/wktformat.js",
      "provides": [
        "ol.format.WKT"
      ]
    },
    {
      "name": "ol.format.WMSCapabilities",
      "kind": "class",
      "description": "Format for reading WMS capabilities data",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/wmscapabilitiesformat.js",
      "provides": [
        "ol.format.WMSCapabilities"
      ]
    },
    {
      "name": "ol.format.WMSCapabilities#read",
      "kind": "function",
      "description": "Read a WMS capabilities document.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/wmscapabilitiesformat.js",
      "provides": [
        "ol.format.WMSCapabilities"
      ]
    },
    {
      "name": "ol.events.condition.altKeyOnly",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/events/condition.js",
      "provides": [
        "ol.events.ConditionType",
        "ol.events.condition"
      ]
    },
    {
      "name": "ol.events.condition.altShiftKeysOnly",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/events/condition.js",
      "provides": [
        "ol.events.ConditionType",
        "ol.events.condition"
      ]
    },
    {
      "name": "ol.events.condition.always",
      "kind": "function",
      "description": "Always true.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/events/condition.js",
      "provides": [
        "ol.events.ConditionType",
        "ol.events.condition"
      ]
    },
    {
      "name": "ol.events.condition.click",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/events/condition.js",
      "provides": [
        "ol.events.ConditionType",
        "ol.events.condition"
      ]
    },
    {
      "name": "ol.events.condition.mouseMove",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/events/condition.js",
      "provides": [
        "ol.events.ConditionType",
        "ol.events.condition"
      ]
    },
    {
      "name": "ol.events.condition.never",
      "kind": "function",
      "description": "Always false.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/events/condition.js",
      "provides": [
        "ol.events.ConditionType",
        "ol.events.condition"
      ]
    },
    {
      "name": "ol.events.condition.singleClick",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/events/condition.js",
      "provides": [
        "ol.events.ConditionType",
        "ol.events.condition"
      ]
    },
    {
      "name": "ol.events.condition.noModifierKeys",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/events/condition.js",
      "provides": [
        "ol.events.ConditionType",
        "ol.events.condition"
      ]
    },
    {
      "name": "ol.events.condition.platformModifierKeyOnly",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/events/condition.js",
      "provides": [
        "ol.events.ConditionType",
        "ol.events.condition"
      ]
    },
    {
      "name": "ol.events.condition.shiftKeyOnly",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/events/condition.js",
      "provides": [
        "ol.events.ConditionType",
        "ol.events.condition"
      ]
    },
    {
      "name": "ol.events.condition.targetNotEditable",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/events/condition.js",
      "provides": [
        "ol.events.ConditionType",
        "ol.events.condition"
      ]
    },
    {
      "name": "ol.events.condition.mouseOnly",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/events/condition.js",
      "provides": [
        "ol.events.ConditionType",
        "ol.events.condition"
      ]
    },
    {
      "name": "ol.dom.Input",
      "kind": "class",
      "description": "Helper class for binding HTML input to an {@link ol.Object}.\n\nExample:\n\n    // bind a checkbox with id 'visible' to a layer's visibility\n    var visible = new ol.dom.Input(document.getElementById('visible'));\n    visible.bindTo('checked', layer, 'visible');",
      "path": "/home/nd0ut/workspace/ol3/src/ol/dom/input.js",
      "provides": [
        "ol.dom.Input",
        "ol.dom.InputProperty"
      ]
    },
    {
      "name": "ol.dom.Input#getChecked",
      "kind": "function",
      "description": "If the input is a checkbox, return whether or not the checkbox is checked.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/dom/input.js",
      "provides": [
        "ol.dom.Input",
        "ol.dom.InputProperty"
      ]
    },
    {
      "name": "ol.dom.Input#getValue",
      "kind": "function",
      "description": "Get the value of the input.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/dom/input.js",
      "provides": [
        "ol.dom.Input",
        "ol.dom.InputProperty"
      ]
    },
    {
      "name": "ol.dom.Input#setValue",
      "kind": "function",
      "description": "Sets the value of the input.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/dom/input.js",
      "provides": [
        "ol.dom.Input",
        "ol.dom.InputProperty"
      ]
    },
    {
      "name": "ol.dom.Input#setChecked",
      "kind": "function",
      "description": "Set whether or not a checkbox is checked.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/dom/input.js",
      "provides": [
        "ol.dom.Input",
        "ol.dom.InputProperty"
      ]
    },
    {
      "name": "ol.control.Attribution",
      "kind": "class",
      "description": "Control to show all the attributions associated with the layer sources\nin the map. This control is one of the default controls included in maps.\nBy default it will show in the bottom right portion of the map, but this can\nbe changed by using a css selector for `.ol-attribution`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/control/attributioncontrol.js",
      "provides": [
        "ol.control.Attribution"
      ]
    },
    {
      "name": "ol.control.Attribution#getCollapsible",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/control/attributioncontrol.js",
      "provides": [
        "ol.control.Attribution"
      ]
    },
    {
      "name": "ol.control.Attribution#setCollapsible",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/control/attributioncontrol.js",
      "provides": [
        "ol.control.Attribution"
      ]
    },
    {
      "name": "ol.control.Attribution#setCollapsed",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/control/attributioncontrol.js",
      "provides": [
        "ol.control.Attribution"
      ]
    },
    {
      "name": "ol.control.Attribution#getCollapsed",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/control/attributioncontrol.js",
      "provides": [
        "ol.control.Attribution"
      ]
    },
    {
      "name": "ol.control.Control",
      "kind": "class",
      "description": "A control is a visible widget with a DOM element in a fixed position on the\nscreen. They can involve user input (buttons), or be informational only;\nthe position is determined using CSS. By default these are placed in the\ncontainer with CSS class name `ol-overlaycontainer-stopevent`, but can use\nany outside DOM element.\n\nThis is the base class for controls. You can use it for simple custom\ncontrols by creating the element with listeners, creating an instance:\n```js\nvar myControl = new ol.control.Control({element: myElement});\n```\nand then adding this to the map.\n\nThe main advantage of having this as a control rather than a simple separate\nDOM element is that preventing propagation is handled for you. Controls\nwill also be `ol.Object`s in a `ol.Collection`, so you can use their\nmethods.\n\nYou can also extend this base for your own control class. See\nexamples/custom-controls for an example of how to do this.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/control/control.js",
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.Control#getMap",
      "kind": "function",
      "description": "Get the map associated with this control.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/control/control.js",
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.Control#setMap",
      "kind": "function",
      "description": "Remove the control from its current map and attach it to the new map.\nSubclasses may set up event handlers to get notified about changes to\nthe map here.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/control/control.js",
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.defaults",
      "kind": "function",
      "description": "Set of controls included in maps by default. Unless configured otherwise,\nthis returns a collection containing an instance of each of the following\ncontrols:\n* {@link ol.control.Zoom}\n* {@link ol.control.Rotate}\n* {@link ol.control.Attribution}",
      "path": "/home/nd0ut/workspace/ol3/src/ol/control/controldefaults.js",
      "provides": [
        "ol.control"
      ]
    },
    {
      "name": "ol.control.FullScreen",
      "kind": "class",
      "description": "Provides a button that when clicked fills up the full screen with the map.\nWhen in full screen mode, a close button is shown to exit full screen mode.\nThe [Fullscreen API](http://www.w3.org/TR/fullscreen/) is used to\ntoggle the map in full screen mode.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/control/fullscreencontrol.js",
      "provides": [
        "ol.control.FullScreen"
      ]
    },
    {
      "name": "ol.control.MousePosition",
      "kind": "class",
      "description": "A control to show the 2D coordinates of the mouse cursor. By default, these\nare in the view projection, but can be in any supported projection.\nBy default the control is shown in the top right corner of the map, but this\ncan be changed by using the css selector `.ol-mouse-position`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/control/mousepositioncontrol.js",
      "provides": [
        "ol.control.MousePosition"
      ]
    },
    {
      "name": "ol.control.MousePosition#getCoordinateFormat",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/control/mousepositioncontrol.js",
      "provides": [
        "ol.control.MousePosition"
      ]
    },
    {
      "name": "ol.control.MousePosition#getProjection",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/control/mousepositioncontrol.js",
      "provides": [
        "ol.control.MousePosition"
      ]
    },
    {
      "name": "ol.control.MousePosition#setMap",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/control/mousepositioncontrol.js",
      "provides": [
        "ol.control.MousePosition"
      ]
    },
    {
      "name": "ol.control.MousePosition#setCoordinateFormat",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/control/mousepositioncontrol.js",
      "provides": [
        "ol.control.MousePosition"
      ]
    },
    {
      "name": "ol.control.MousePosition#setProjection",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/control/mousepositioncontrol.js",
      "provides": [
        "ol.control.MousePosition"
      ]
    },
    {
      "name": "ol.control.Rotate",
      "kind": "class",
      "description": "A button control to reset rotation to 0.\nTo style this control use css selector `.ol-rotate`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/control/rotatecontrol.js",
      "provides": [
        "ol.control.Rotate"
      ]
    },
    {
      "name": "ol.control.ScaleLine",
      "kind": "class",
      "description": "A control displaying rough x-axis distances, calculated for the center of the\nviewport.\nNo scale line will be shown when the x-axis distance cannot be calculated in\nthe view projection (e.g. at or beyond the poles in EPSG:4326).\nBy default the scale line will show in the bottom left portion of the map,\nbut this can be changed by using the css selector `.ol-scale-line`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/control/scalelinecontrol.js",
      "provides": [
        "ol.control.ScaleLine",
        "ol.control.ScaleLineProperty",
        "ol.control.ScaleLineUnits"
      ]
    },
    {
      "name": "ol.control.ScaleLine#getUnits",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/control/scalelinecontrol.js",
      "provides": [
        "ol.control.ScaleLine",
        "ol.control.ScaleLineProperty",
        "ol.control.ScaleLineUnits"
      ]
    },
    {
      "name": "ol.control.ScaleLine#setUnits",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/control/scalelinecontrol.js",
      "provides": [
        "ol.control.ScaleLine",
        "ol.control.ScaleLineProperty",
        "ol.control.ScaleLineUnits"
      ]
    },
    {
      "name": "ol.control.Zoom",
      "kind": "class",
      "description": "A control with 2 buttons, one for zoom in and one for zoom out.\nThis control is one of the default controls of a map. To style this control\nuse css selectors `.ol-zoom-in` and `.ol-zoom-out`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/control/zoomcontrol.js",
      "provides": [
        "ol.control.Zoom"
      ]
    },
    {
      "name": "ol.control.ZoomSlider",
      "kind": "class",
      "description": "A slider type of control for zooming.\n\nExample:\n\n    map.addControl(new ol.control.ZoomSlider());",
      "path": "/home/nd0ut/workspace/ol3/src/ol/control/zoomslidercontrol.js",
      "provides": [
        "ol.control.ZoomSlider"
      ]
    },
    {
      "name": "ol.control.ZoomToExtent",
      "kind": "class",
      "description": "A button control which, when pressed, changes the map view to a specific\nextent. To style this control use the css selector `.ol-zoom-extent`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/control/zoomtoextentcontrol.js",
      "provides": [
        "ol.control.ZoomToExtent"
      ]
    },
    {
      "name": "ol.color.asArray",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/color/color.js",
      "provides": [
        "ol.color"
      ]
    },
    {
      "name": "ol.color.asString",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/color/color.js",
      "provides": [
        "ol.color"
      ]
    },
    {
      "name": "ol.Object#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Object#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Object#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Object#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Object#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Object#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Collection#bindTo",
      "kind": "function",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an object with a\n`transform` method that you can use to provide `from` and `to`\nfunctions to transform values on the way from the source to the\ntarget and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Collection#get",
      "kind": "function",
      "description": "Gets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Collection#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Collection#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Collection#set",
      "kind": "function",
      "description": "Sets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Collection#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Collection#unbind",
      "kind": "function",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Collection#unbindAll",
      "kind": "function",
      "description": "Removes all bindings.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Collection#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Collection#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Collection#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Collection#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Collection#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Collection#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.DeviceOrientation#bindTo",
      "kind": "function",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an object with a\n`transform` method that you can use to provide `from` and `to`\nfunctions to transform values on the way from the source to the\ntarget and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.DeviceOrientation#get",
      "kind": "function",
      "description": "Gets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.DeviceOrientation#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.DeviceOrientation#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.DeviceOrientation#set",
      "kind": "function",
      "description": "Sets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.DeviceOrientation#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.DeviceOrientation#unbind",
      "kind": "function",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.DeviceOrientation#unbindAll",
      "kind": "function",
      "description": "Removes all bindings.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.DeviceOrientation#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.DeviceOrientation#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.DeviceOrientation#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.DeviceOrientation#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.DeviceOrientation#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.DeviceOrientation#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Feature#bindTo",
      "kind": "function",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an object with a\n`transform` method that you can use to provide `from` and `to`\nfunctions to transform values on the way from the source to the\ntarget and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Feature#get",
      "kind": "function",
      "description": "Gets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Feature#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Feature#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Feature#set",
      "kind": "function",
      "description": "Sets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Feature#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Feature#unbind",
      "kind": "function",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Feature#unbindAll",
      "kind": "function",
      "description": "Removes all bindings.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Feature#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Feature#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Feature#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Feature#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Feature#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Feature#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Geolocation#bindTo",
      "kind": "function",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an object with a\n`transform` method that you can use to provide `from` and `to`\nfunctions to transform values on the way from the source to the\ntarget and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Geolocation#get",
      "kind": "function",
      "description": "Gets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Geolocation#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Geolocation#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Geolocation#set",
      "kind": "function",
      "description": "Sets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Geolocation#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Geolocation#unbind",
      "kind": "function",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Geolocation#unbindAll",
      "kind": "function",
      "description": "Removes all bindings.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Geolocation#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Geolocation#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Geolocation#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Geolocation#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Geolocation#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Geolocation#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.ImageTile#getTileCoord",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/tile.js",
      "provides": [
        "ol.Tile",
        "ol.TileState"
      ]
    },
    {
      "name": "ol.Map#bindTo",
      "kind": "function",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an object with a\n`transform` method that you can use to provide `from` and `to`\nfunctions to transform values on the way from the source to the\ntarget and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Map#get",
      "kind": "function",
      "description": "Gets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Map#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Map#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Map#set",
      "kind": "function",
      "description": "Sets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Map#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Map#unbind",
      "kind": "function",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Map#unbindAll",
      "kind": "function",
      "description": "Removes all bindings.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Map#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Map#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Map#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Map#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Map#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Map#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.MapBrowserEvent#map",
      "kind": "member",
      "description": "The map where the event occurred.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/mapevent.js",
      "provides": [
        "ol.MapEvent",
        "ol.MapEventType"
      ]
    },
    {
      "name": "ol.MapBrowserEvent#frameState",
      "kind": "member",
      "description": "The frame state at the time of the event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/mapevent.js",
      "provides": [
        "ol.MapEvent",
        "ol.MapEventType"
      ]
    },
    {
      "name": "ol.MapBrowserPointerEvent#originalEvent",
      "kind": "constant",
      "path": "/home/nd0ut/workspace/ol3/src/ol/mapbrowserevent.js",
      "provides": [
        "ol.MapBrowserEvent",
        "ol.MapBrowserEvent.EventType",
        "ol.MapBrowserEventHandler",
        "ol.MapBrowserPointerEvent"
      ]
    },
    {
      "name": "ol.MapBrowserPointerEvent#coordinate",
      "kind": "member",
      "path": "/home/nd0ut/workspace/ol3/src/ol/mapbrowserevent.js",
      "provides": [
        "ol.MapBrowserEvent",
        "ol.MapBrowserEvent.EventType",
        "ol.MapBrowserEventHandler",
        "ol.MapBrowserPointerEvent"
      ]
    },
    {
      "name": "ol.MapBrowserPointerEvent#pixel",
      "kind": "member",
      "path": "/home/nd0ut/workspace/ol3/src/ol/mapbrowserevent.js",
      "provides": [
        "ol.MapBrowserEvent",
        "ol.MapBrowserEvent.EventType",
        "ol.MapBrowserEventHandler",
        "ol.MapBrowserPointerEvent"
      ]
    },
    {
      "name": "ol.MapBrowserPointerEvent#preventDefault",
      "kind": "function",
      "description": "Prevents the default browser action.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/mapbrowserevent.js",
      "provides": [
        "ol.MapBrowserEvent",
        "ol.MapBrowserEvent.EventType",
        "ol.MapBrowserEventHandler",
        "ol.MapBrowserPointerEvent"
      ]
    },
    {
      "name": "ol.MapBrowserPointerEvent#stopPropagation",
      "kind": "function",
      "description": "Prevents further propagation of the current event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/mapbrowserevent.js",
      "provides": [
        "ol.MapBrowserEvent",
        "ol.MapBrowserEvent.EventType",
        "ol.MapBrowserEventHandler",
        "ol.MapBrowserPointerEvent"
      ]
    },
    {
      "name": "ol.MapBrowserPointerEvent#map",
      "kind": "member",
      "description": "The map where the event occurred.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/mapevent.js",
      "provides": [
        "ol.MapEvent",
        "ol.MapEventType"
      ]
    },
    {
      "name": "ol.MapBrowserPointerEvent#frameState",
      "kind": "member",
      "description": "The frame state at the time of the event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/mapevent.js",
      "provides": [
        "ol.MapEvent",
        "ol.MapEventType"
      ]
    },
    {
      "name": "ol.Overlay#bindTo",
      "kind": "function",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an object with a\n`transform` method that you can use to provide `from` and `to`\nfunctions to transform values on the way from the source to the\ntarget and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Overlay#get",
      "kind": "function",
      "description": "Gets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Overlay#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Overlay#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Overlay#set",
      "kind": "function",
      "description": "Sets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Overlay#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Overlay#unbind",
      "kind": "function",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Overlay#unbindAll",
      "kind": "function",
      "description": "Removes all bindings.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.Overlay#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Overlay#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Overlay#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Overlay#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Overlay#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.Overlay#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.View#bindTo",
      "kind": "function",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an object with a\n`transform` method that you can use to provide `from` and `to`\nfunctions to transform values on the way from the source to the\ntarget and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.View#get",
      "kind": "function",
      "description": "Gets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.View#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.View#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.View#set",
      "kind": "function",
      "description": "Sets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.View#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.View#unbind",
      "kind": "function",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.View#unbindAll",
      "kind": "function",
      "description": "Removes all bindings.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.View#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.View#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.View#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.View#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.View#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.View#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.tilegrid.WMTS#getMinZoom",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/tilegrid/tilegrid.js",
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.WMTS#getOrigin",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/tilegrid/tilegrid.js",
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.WMTS#getResolution",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/tilegrid/tilegrid.js",
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.WMTS#getResolutions",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/tilegrid/tilegrid.js",
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.WMTS#getTileSize",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/tilegrid/tilegrid.js",
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.XYZ#getMinZoom",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/tilegrid/tilegrid.js",
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.XYZ#getOrigin",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/tilegrid/tilegrid.js",
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.XYZ#getResolution",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/tilegrid/tilegrid.js",
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.XYZ#getResolutions",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/tilegrid/tilegrid.js",
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.XYZ#getTileSize",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/tilegrid/tilegrid.js",
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.Zoomify#getMinZoom",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/tilegrid/tilegrid.js",
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.Zoomify#getOrigin",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/tilegrid/tilegrid.js",
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.Zoomify#getResolution",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/tilegrid/tilegrid.js",
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.Zoomify#getResolutions",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/tilegrid/tilegrid.js",
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.tilegrid.Zoomify#getTileSize",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/tilegrid/tilegrid.js",
      "provides": [
        "ol.tilegrid.TileGrid"
      ]
    },
    {
      "name": "ol.style.Circle#getRotation",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/imagestyle.js",
      "provides": [
        "ol.style.Image",
        "ol.style.ImageState"
      ]
    },
    {
      "name": "ol.style.Circle#getScale",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/imagestyle.js",
      "provides": [
        "ol.style.Image",
        "ol.style.ImageState"
      ]
    },
    {
      "name": "ol.style.Icon#getRotation",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/imagestyle.js",
      "provides": [
        "ol.style.Image",
        "ol.style.ImageState"
      ]
    },
    {
      "name": "ol.style.Icon#getScale",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/style/imagestyle.js",
      "provides": [
        "ol.style.Image",
        "ol.style.ImageState"
      ]
    },
    {
      "name": "ol.source.Source#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Source#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Source#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Source#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Source#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Source#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Tile#getState",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/source.js",
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.Tile#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Tile#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Tile#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Tile#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Tile#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Tile#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileImage#getTileGrid",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tilesource.js",
      "provides": [
        "ol.source.Tile",
        "ol.source.TileOptions"
      ]
    },
    {
      "name": "ol.source.TileImage#getState",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/source.js",
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.TileImage#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileImage#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileImage#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileImage#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileImage#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileImage#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.BingMaps#getTileLoadFunction",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tileimagesource.js",
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.BingMaps#getTileUrlFunction",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tileimagesource.js",
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.BingMaps#setTileLoadFunction",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tileimagesource.js",
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.BingMaps#setTileUrlFunction",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tileimagesource.js",
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.BingMaps#getTileGrid",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tilesource.js",
      "provides": [
        "ol.source.Tile",
        "ol.source.TileOptions"
      ]
    },
    {
      "name": "ol.source.BingMaps#getState",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/source.js",
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.BingMaps#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.BingMaps#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.BingMaps#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.BingMaps#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.BingMaps#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.BingMaps#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileDebug#getTileGrid",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tilesource.js",
      "provides": [
        "ol.source.Tile",
        "ol.source.TileOptions"
      ]
    },
    {
      "name": "ol.source.TileDebug#getState",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/source.js",
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.TileDebug#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileDebug#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileDebug#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileDebug#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileDebug#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileDebug#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Vector#getState",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/source.js",
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.Vector#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Vector#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Vector#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Vector#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Vector#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Vector#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.FormatVector#addFeature",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.FormatVector#addFeatures",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.FormatVector#clear",
      "kind": "function",
      "description": "Remove all features.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.FormatVector#forEachFeature",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.FormatVector#forEachFeatureInExtent",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.FormatVector#getFeatures",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.FormatVector#getFeaturesAtCoordinate",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.FormatVector#getClosestFeatureToCoordinate",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.FormatVector#getExtent",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.FormatVector#getFeatureById",
      "kind": "function",
      "description": "Get a feature by its identifier (the value returned by feature.getId()).\nNote that the index treats string and numeric identifiers as the same.  So\n`source.getFeatureById(2)` will return a feature with id `'2'` or `2`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.FormatVector#removeFeature",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.FormatVector#getState",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/source.js",
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.FormatVector#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.FormatVector#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.FormatVector#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.FormatVector#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.FormatVector#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.FormatVector#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.StaticVector#readFeatures",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/formatvectorsource.js",
      "provides": [
        "ol.source.FormatVector"
      ]
    },
    {
      "name": "ol.source.StaticVector#addFeature",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.StaticVector#addFeatures",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.StaticVector#clear",
      "kind": "function",
      "description": "Remove all features.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.StaticVector#forEachFeature",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.StaticVector#forEachFeatureInExtent",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.StaticVector#getFeatures",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.StaticVector#getFeaturesAtCoordinate",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.StaticVector#getClosestFeatureToCoordinate",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.StaticVector#getExtent",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.StaticVector#getFeatureById",
      "kind": "function",
      "description": "Get a feature by its identifier (the value returned by feature.getId()).\nNote that the index treats string and numeric identifiers as the same.  So\n`source.getFeatureById(2)` will return a feature with id `'2'` or `2`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.StaticVector#removeFeature",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.StaticVector#getState",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/source.js",
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.StaticVector#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.StaticVector#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.StaticVector#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.StaticVector#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.StaticVector#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.StaticVector#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.GeoJSON#readFeatures",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/formatvectorsource.js",
      "provides": [
        "ol.source.FormatVector"
      ]
    },
    {
      "name": "ol.source.GeoJSON#addFeature",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.GeoJSON#addFeatures",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.GeoJSON#clear",
      "kind": "function",
      "description": "Remove all features.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.GeoJSON#forEachFeature",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.GeoJSON#forEachFeatureInExtent",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.GeoJSON#getFeatures",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.GeoJSON#getFeaturesAtCoordinate",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.GeoJSON#getClosestFeatureToCoordinate",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.GeoJSON#getExtent",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.GeoJSON#getFeatureById",
      "kind": "function",
      "description": "Get a feature by its identifier (the value returned by feature.getId()).\nNote that the index treats string and numeric identifiers as the same.  So\n`source.getFeatureById(2)` will return a feature with id `'2'` or `2`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.GeoJSON#removeFeature",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.GeoJSON#getState",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/source.js",
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.GeoJSON#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.GeoJSON#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.GeoJSON#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.GeoJSON#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.GeoJSON#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.GeoJSON#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.GPX#readFeatures",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/formatvectorsource.js",
      "provides": [
        "ol.source.FormatVector"
      ]
    },
    {
      "name": "ol.source.GPX#addFeature",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.GPX#addFeatures",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.GPX#clear",
      "kind": "function",
      "description": "Remove all features.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.GPX#forEachFeature",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.GPX#forEachFeatureInExtent",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.GPX#getFeatures",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.GPX#getFeaturesAtCoordinate",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.GPX#getClosestFeatureToCoordinate",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.GPX#getExtent",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.GPX#getFeatureById",
      "kind": "function",
      "description": "Get a feature by its identifier (the value returned by feature.getId()).\nNote that the index treats string and numeric identifiers as the same.  So\n`source.getFeatureById(2)` will return a feature with id `'2'` or `2`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.GPX#removeFeature",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.GPX#getState",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/source.js",
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.GPX#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.GPX#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.GPX#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.GPX#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.GPX#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.GPX#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.IGC#readFeatures",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/formatvectorsource.js",
      "provides": [
        "ol.source.FormatVector"
      ]
    },
    {
      "name": "ol.source.IGC#addFeature",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.IGC#addFeatures",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.IGC#clear",
      "kind": "function",
      "description": "Remove all features.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.IGC#forEachFeature",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.IGC#forEachFeatureInExtent",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.IGC#getFeatures",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.IGC#getFeaturesAtCoordinate",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.IGC#getClosestFeatureToCoordinate",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.IGC#getExtent",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.IGC#getFeatureById",
      "kind": "function",
      "description": "Get a feature by its identifier (the value returned by feature.getId()).\nNote that the index treats string and numeric identifiers as the same.  So\n`source.getFeatureById(2)` will return a feature with id `'2'` or `2`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.IGC#removeFeature",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.IGC#getState",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/source.js",
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.IGC#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.IGC#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.IGC#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.IGC#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.IGC#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.IGC#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Image#getState",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/source.js",
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.Image#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Image#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Image#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Image#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Image#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Image#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageCanvas#getState",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/source.js",
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.ImageCanvas#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageCanvas#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageCanvas#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageCanvas#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageCanvas#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageCanvas#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageStatic#getState",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/source.js",
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.ImageStatic#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageStatic#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageStatic#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageStatic#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageStatic#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageStatic#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageVector#getState",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/source.js",
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.ImageVector#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageVector#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageVector#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageVector#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageVector#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageVector#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageWMS#getState",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/source.js",
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.ImageWMS#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageWMS#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageWMS#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageWMS#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageWMS#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ImageWMS#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.KML#readFeatures",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/formatvectorsource.js",
      "provides": [
        "ol.source.FormatVector"
      ]
    },
    {
      "name": "ol.source.KML#addFeature",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.KML#addFeatures",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.KML#clear",
      "kind": "function",
      "description": "Remove all features.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.KML#forEachFeature",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.KML#forEachFeatureInExtent",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.KML#getFeatures",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.KML#getFeaturesAtCoordinate",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.KML#getClosestFeatureToCoordinate",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.KML#getExtent",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.KML#getFeatureById",
      "kind": "function",
      "description": "Get a feature by its identifier (the value returned by feature.getId()).\nNote that the index treats string and numeric identifiers as the same.  So\n`source.getFeatureById(2)` will return a feature with id `'2'` or `2`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.KML#removeFeature",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.KML#getState",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/source.js",
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.KML#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.KML#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.KML#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.KML#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.KML#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.KML#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.MapGuide#getState",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/source.js",
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.MapGuide#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.MapGuide#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.MapGuide#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.MapGuide#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.MapGuide#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.MapGuide#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.XYZ#getTileLoadFunction",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tileimagesource.js",
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.XYZ#getTileUrlFunction",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tileimagesource.js",
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.XYZ#setTileLoadFunction",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tileimagesource.js",
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.XYZ#getTileGrid",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tilesource.js",
      "provides": [
        "ol.source.Tile",
        "ol.source.TileOptions"
      ]
    },
    {
      "name": "ol.source.XYZ#getState",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/source.js",
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.XYZ#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.XYZ#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.XYZ#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.XYZ#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.XYZ#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.XYZ#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.MapQuest#setTileUrlFunction",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/xyzsource.js",
      "provides": [
        "ol.source.XYZ"
      ]
    },
    {
      "name": "ol.source.MapQuest#setUrl",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/xyzsource.js",
      "provides": [
        "ol.source.XYZ"
      ]
    },
    {
      "name": "ol.source.MapQuest#getTileLoadFunction",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tileimagesource.js",
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.MapQuest#getTileUrlFunction",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tileimagesource.js",
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.MapQuest#setTileLoadFunction",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tileimagesource.js",
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.MapQuest#getTileGrid",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tilesource.js",
      "provides": [
        "ol.source.Tile",
        "ol.source.TileOptions"
      ]
    },
    {
      "name": "ol.source.MapQuest#getState",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/source.js",
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.MapQuest#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.MapQuest#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.MapQuest#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.MapQuest#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.MapQuest#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.MapQuest#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.OSM#setTileUrlFunction",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/xyzsource.js",
      "provides": [
        "ol.source.XYZ"
      ]
    },
    {
      "name": "ol.source.OSM#setUrl",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/xyzsource.js",
      "provides": [
        "ol.source.XYZ"
      ]
    },
    {
      "name": "ol.source.OSM#getTileLoadFunction",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tileimagesource.js",
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.OSM#getTileUrlFunction",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tileimagesource.js",
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.OSM#setTileLoadFunction",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tileimagesource.js",
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.OSM#getTileGrid",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tilesource.js",
      "provides": [
        "ol.source.Tile",
        "ol.source.TileOptions"
      ]
    },
    {
      "name": "ol.source.OSM#getState",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/source.js",
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.OSM#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.OSM#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.OSM#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.OSM#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.OSM#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.OSM#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.OSMXML#readFeatures",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/formatvectorsource.js",
      "provides": [
        "ol.source.FormatVector"
      ]
    },
    {
      "name": "ol.source.OSMXML#addFeature",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.OSMXML#addFeatures",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.OSMXML#clear",
      "kind": "function",
      "description": "Remove all features.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.OSMXML#forEachFeature",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.OSMXML#forEachFeatureInExtent",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.OSMXML#getFeatures",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.OSMXML#getFeaturesAtCoordinate",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.OSMXML#getClosestFeatureToCoordinate",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.OSMXML#getExtent",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.OSMXML#getFeatureById",
      "kind": "function",
      "description": "Get a feature by its identifier (the value returned by feature.getId()).\nNote that the index treats string and numeric identifiers as the same.  So\n`source.getFeatureById(2)` will return a feature with id `'2'` or `2`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.OSMXML#removeFeature",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.OSMXML#getState",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/source.js",
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.OSMXML#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.OSMXML#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.OSMXML#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.OSMXML#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.OSMXML#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.OSMXML#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ServerVector#addFeature",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.ServerVector#addFeatures",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.ServerVector#clear",
      "kind": "function",
      "description": "Remove all features.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.ServerVector#forEachFeature",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.ServerVector#forEachFeatureInExtent",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.ServerVector#getFeatures",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.ServerVector#getFeaturesAtCoordinate",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.ServerVector#getClosestFeatureToCoordinate",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.ServerVector#getExtent",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.ServerVector#getFeatureById",
      "kind": "function",
      "description": "Get a feature by its identifier (the value returned by feature.getId()).\nNote that the index treats string and numeric identifiers as the same.  So\n`source.getFeatureById(2)` will return a feature with id `'2'` or `2`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.ServerVector#removeFeature",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.ServerVector#getState",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/source.js",
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.ServerVector#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ServerVector#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ServerVector#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ServerVector#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ServerVector#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.ServerVector#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Stamen#setTileUrlFunction",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/xyzsource.js",
      "provides": [
        "ol.source.XYZ"
      ]
    },
    {
      "name": "ol.source.Stamen#setUrl",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/xyzsource.js",
      "provides": [
        "ol.source.XYZ"
      ]
    },
    {
      "name": "ol.source.Stamen#getTileLoadFunction",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tileimagesource.js",
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.Stamen#getTileUrlFunction",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tileimagesource.js",
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.Stamen#setTileLoadFunction",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tileimagesource.js",
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.Stamen#getTileGrid",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tilesource.js",
      "provides": [
        "ol.source.Tile",
        "ol.source.TileOptions"
      ]
    },
    {
      "name": "ol.source.Stamen#getState",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/source.js",
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.Stamen#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Stamen#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Stamen#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Stamen#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Stamen#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Stamen#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileJSON#getTileLoadFunction",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tileimagesource.js",
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.TileJSON#getTileUrlFunction",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tileimagesource.js",
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.TileJSON#setTileLoadFunction",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tileimagesource.js",
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.TileJSON#setTileUrlFunction",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tileimagesource.js",
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.TileJSON#getTileGrid",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tilesource.js",
      "provides": [
        "ol.source.Tile",
        "ol.source.TileOptions"
      ]
    },
    {
      "name": "ol.source.TileJSON#getState",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/source.js",
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.TileJSON#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileJSON#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileJSON#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileJSON#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileJSON#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileJSON#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileVector#readFeatures",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/formatvectorsource.js",
      "provides": [
        "ol.source.FormatVector"
      ]
    },
    {
      "name": "ol.source.TileVector#getFeaturesAtCoordinate",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.TileVector#getFeatureById",
      "kind": "function",
      "description": "Get a feature by its identifier (the value returned by feature.getId()).\nNote that the index treats string and numeric identifiers as the same.  So\n`source.getFeatureById(2)` will return a feature with id `'2'` or `2`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.TileVector#getState",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/source.js",
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.TileVector#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileVector#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileVector#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileVector#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileVector#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileVector#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileWMS#getTileLoadFunction",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tileimagesource.js",
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.TileWMS#getTileUrlFunction",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tileimagesource.js",
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.TileWMS#setTileLoadFunction",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tileimagesource.js",
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.TileWMS#setTileUrlFunction",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tileimagesource.js",
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.TileWMS#getTileGrid",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tilesource.js",
      "provides": [
        "ol.source.Tile",
        "ol.source.TileOptions"
      ]
    },
    {
      "name": "ol.source.TileWMS#getState",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/source.js",
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.TileWMS#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileWMS#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileWMS#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileWMS#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileWMS#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TileWMS#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TopoJSON#readFeatures",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/formatvectorsource.js",
      "provides": [
        "ol.source.FormatVector"
      ]
    },
    {
      "name": "ol.source.TopoJSON#addFeature",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.TopoJSON#addFeatures",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.TopoJSON#clear",
      "kind": "function",
      "description": "Remove all features.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.TopoJSON#forEachFeature",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.TopoJSON#forEachFeatureInExtent",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.TopoJSON#getFeatures",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.TopoJSON#getFeaturesAtCoordinate",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.TopoJSON#getClosestFeatureToCoordinate",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.TopoJSON#getExtent",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.TopoJSON#getFeatureById",
      "kind": "function",
      "description": "Get a feature by its identifier (the value returned by feature.getId()).\nNote that the index treats string and numeric identifiers as the same.  So\n`source.getFeatureById(2)` will return a feature with id `'2'` or `2`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.TopoJSON#removeFeature",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/vectorsource.js",
      "provides": [
        "ol.source.Vector",
        "ol.source.VectorEvent",
        "ol.source.VectorEventType"
      ]
    },
    {
      "name": "ol.source.TopoJSON#getState",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/source.js",
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.TopoJSON#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TopoJSON#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TopoJSON#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TopoJSON#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TopoJSON#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.TopoJSON#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.WMTS#getTileLoadFunction",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tileimagesource.js",
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.WMTS#getTileUrlFunction",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tileimagesource.js",
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.WMTS#setTileLoadFunction",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tileimagesource.js",
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.WMTS#setTileUrlFunction",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tileimagesource.js",
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.WMTS#getTileGrid",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tilesource.js",
      "provides": [
        "ol.source.Tile",
        "ol.source.TileOptions"
      ]
    },
    {
      "name": "ol.source.WMTS#getState",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/source.js",
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.WMTS#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.WMTS#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.WMTS#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.WMTS#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.WMTS#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.WMTS#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Zoomify#getTileLoadFunction",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tileimagesource.js",
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.Zoomify#getTileUrlFunction",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tileimagesource.js",
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.Zoomify#setTileLoadFunction",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tileimagesource.js",
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.Zoomify#setTileUrlFunction",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tileimagesource.js",
      "provides": [
        "ol.source.TileImage"
      ]
    },
    {
      "name": "ol.source.Zoomify#getTileGrid",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/tilesource.js",
      "provides": [
        "ol.source.Tile",
        "ol.source.TileOptions"
      ]
    },
    {
      "name": "ol.source.Zoomify#getState",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/source/source.js",
      "provides": [
        "ol.source.Source",
        "ol.source.State"
      ]
    },
    {
      "name": "ol.source.Zoomify#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Zoomify#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Zoomify#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Zoomify#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Zoomify#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.source.Zoomify#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.proj.CH#getCode",
      "kind": "function",
      "description": "Get the code for this projection, e.g. 'EPSG:4326'.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/proj/proj.js",
      "provides": [
        "ol.proj",
        "ol.proj.METERS_PER_UNIT",
        "ol.proj.Projection",
        "ol.proj.ProjectionLike",
        "ol.proj.Units"
      ]
    },
    {
      "name": "ol.proj.CH#getExtent",
      "kind": "function",
      "description": "Get the validity extent for this projection.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/proj/proj.js",
      "provides": [
        "ol.proj",
        "ol.proj.METERS_PER_UNIT",
        "ol.proj.Projection",
        "ol.proj.ProjectionLike",
        "ol.proj.Units"
      ]
    },
    {
      "name": "ol.proj.CH#getUnits",
      "kind": "function",
      "description": "Get the units of this projection.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/proj/proj.js",
      "provides": [
        "ol.proj",
        "ol.proj.METERS_PER_UNIT",
        "ol.proj.Projection",
        "ol.proj.ProjectionLike",
        "ol.proj.Units"
      ]
    },
    {
      "name": "ol.proj.CH#setExtent",
      "kind": "function",
      "description": "Set the validity extent for this projection.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/proj/proj.js",
      "provides": [
        "ol.proj",
        "ol.proj.METERS_PER_UNIT",
        "ol.proj.Projection",
        "ol.proj.ProjectionLike",
        "ol.proj.Units"
      ]
    },
    {
      "name": "ol.proj.EPSG2056#getCode",
      "kind": "function",
      "description": "Get the code for this projection, e.g. 'EPSG:4326'.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/proj/proj.js",
      "provides": [
        "ol.proj",
        "ol.proj.METERS_PER_UNIT",
        "ol.proj.Projection",
        "ol.proj.ProjectionLike",
        "ol.proj.Units"
      ]
    },
    {
      "name": "ol.proj.EPSG2056#getExtent",
      "kind": "function",
      "description": "Get the validity extent for this projection.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/proj/proj.js",
      "provides": [
        "ol.proj",
        "ol.proj.METERS_PER_UNIT",
        "ol.proj.Projection",
        "ol.proj.ProjectionLike",
        "ol.proj.Units"
      ]
    },
    {
      "name": "ol.proj.EPSG2056#getUnits",
      "kind": "function",
      "description": "Get the units of this projection.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/proj/proj.js",
      "provides": [
        "ol.proj",
        "ol.proj.METERS_PER_UNIT",
        "ol.proj.Projection",
        "ol.proj.ProjectionLike",
        "ol.proj.Units"
      ]
    },
    {
      "name": "ol.proj.EPSG2056#setExtent",
      "kind": "function",
      "description": "Set the validity extent for this projection.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/proj/proj.js",
      "provides": [
        "ol.proj",
        "ol.proj.METERS_PER_UNIT",
        "ol.proj.Projection",
        "ol.proj.ProjectionLike",
        "ol.proj.Units"
      ]
    },
    {
      "name": "ol.proj.EPSG21781#getCode",
      "kind": "function",
      "description": "Get the code for this projection, e.g. 'EPSG:4326'.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/proj/proj.js",
      "provides": [
        "ol.proj",
        "ol.proj.METERS_PER_UNIT",
        "ol.proj.Projection",
        "ol.proj.ProjectionLike",
        "ol.proj.Units"
      ]
    },
    {
      "name": "ol.proj.EPSG21781#getExtent",
      "kind": "function",
      "description": "Get the validity extent for this projection.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/proj/proj.js",
      "provides": [
        "ol.proj",
        "ol.proj.METERS_PER_UNIT",
        "ol.proj.Projection",
        "ol.proj.ProjectionLike",
        "ol.proj.Units"
      ]
    },
    {
      "name": "ol.proj.EPSG21781#getUnits",
      "kind": "function",
      "description": "Get the units of this projection.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/proj/proj.js",
      "provides": [
        "ol.proj",
        "ol.proj.METERS_PER_UNIT",
        "ol.proj.Projection",
        "ol.proj.ProjectionLike",
        "ol.proj.Units"
      ]
    },
    {
      "name": "ol.proj.EPSG21781#setExtent",
      "kind": "function",
      "description": "Set the validity extent for this projection.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/proj/proj.js",
      "provides": [
        "ol.proj",
        "ol.proj.METERS_PER_UNIT",
        "ol.proj.Projection",
        "ol.proj.ProjectionLike",
        "ol.proj.Units"
      ]
    },
    {
      "name": "ol.layer.Base#bindTo",
      "kind": "function",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an object with a\n`transform` method that you can use to provide `from` and `to`\nfunctions to transform values on the way from the source to the\ntarget and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Base#get",
      "kind": "function",
      "description": "Gets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Base#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Base#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Base#set",
      "kind": "function",
      "description": "Sets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Base#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Base#unbind",
      "kind": "function",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Base#unbindAll",
      "kind": "function",
      "description": "Removes all bindings.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Base#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Base#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Base#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Base#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Base#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Base#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Layer#getBrightness",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Layer#getContrast",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Layer#getHue",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Layer#getMaxResolution",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Layer#getMinResolution",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Layer#getOpacity",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Layer#getSaturation",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Layer#getVisible",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Layer#setBrightness",
      "kind": "function",
      "description": "Adjust the layer brightness.  A value of -1 will render the layer completely\nblack.  A value of 0 will leave the brightness unchanged.  A value of 1 will\nrender the layer completely white.  Other values are linear multipliers on\nthe effect (values are clamped between -1 and 1).\n\nThe filter effects draft [1] says the brightness function is supposed to\nrender 0 black, 1 unchanged, and all other values as a linear multiplier.\n\nThe current WebKit implementation clamps values between -1 (black) and 1\n(white) [2].  There is a bug open to change the filter effect spec [3].\n\nTODO: revisit this if the spec is still unmodified before we release\n\n[1] https://dvcs.w3.org/hg/FXTF/raw-file/tip/filters/index.html\n[2] https://github.com/WebKit/webkit/commit/8f4765e569\n[3] https://www.w3.org/Bugs/Public/show_bug.cgi?id=15647",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Layer#setContrast",
      "kind": "function",
      "description": "Adjust the layer contrast.  A value of 0 will render the layer completely\ngrey.  A value of 1 will leave the contrast unchanged.  Other values are\nlinear multipliers on the effect (and values over 1 are permitted).",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Layer#setHue",
      "kind": "function",
      "description": "Apply a hue-rotation to the layer.  A value of 0 will leave the hue\nunchanged.  Other values are radians around the color circle.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Layer#setMaxResolution",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Layer#setMinResolution",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Layer#setOpacity",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Layer#setSaturation",
      "kind": "function",
      "description": "Adjust layer saturation.  A value of 0 will render the layer completely\nunsaturated.  A value of 1 will leave the saturation unchanged.  Other\nvalues are linear multipliers of the effect (and values over 1 are\npermitted).",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Layer#setVisible",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Layer#bindTo",
      "kind": "function",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an object with a\n`transform` method that you can use to provide `from` and `to`\nfunctions to transform values on the way from the source to the\ntarget and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Layer#get",
      "kind": "function",
      "description": "Gets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Layer#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Layer#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Layer#set",
      "kind": "function",
      "description": "Sets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Layer#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Layer#unbind",
      "kind": "function",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Layer#unbindAll",
      "kind": "function",
      "description": "Removes all bindings.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Layer#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Layer#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Layer#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Layer#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Layer#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Layer#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Vector#getSource",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layer.js",
      "provides": [
        "ol.layer.Layer"
      ]
    },
    {
      "name": "ol.layer.Vector#getBrightness",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Vector#getContrast",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Vector#getHue",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Vector#getMaxResolution",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Vector#getMinResolution",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Vector#getOpacity",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Vector#getSaturation",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Vector#getVisible",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Vector#setBrightness",
      "kind": "function",
      "description": "Adjust the layer brightness.  A value of -1 will render the layer completely\nblack.  A value of 0 will leave the brightness unchanged.  A value of 1 will\nrender the layer completely white.  Other values are linear multipliers on\nthe effect (values are clamped between -1 and 1).\n\nThe filter effects draft [1] says the brightness function is supposed to\nrender 0 black, 1 unchanged, and all other values as a linear multiplier.\n\nThe current WebKit implementation clamps values between -1 (black) and 1\n(white) [2].  There is a bug open to change the filter effect spec [3].\n\nTODO: revisit this if the spec is still unmodified before we release\n\n[1] https://dvcs.w3.org/hg/FXTF/raw-file/tip/filters/index.html\n[2] https://github.com/WebKit/webkit/commit/8f4765e569\n[3] https://www.w3.org/Bugs/Public/show_bug.cgi?id=15647",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Vector#setContrast",
      "kind": "function",
      "description": "Adjust the layer contrast.  A value of 0 will render the layer completely\ngrey.  A value of 1 will leave the contrast unchanged.  Other values are\nlinear multipliers on the effect (and values over 1 are permitted).",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Vector#setHue",
      "kind": "function",
      "description": "Apply a hue-rotation to the layer.  A value of 0 will leave the hue\nunchanged.  Other values are radians around the color circle.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Vector#setMaxResolution",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Vector#setMinResolution",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Vector#setOpacity",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Vector#setSaturation",
      "kind": "function",
      "description": "Adjust layer saturation.  A value of 0 will render the layer completely\nunsaturated.  A value of 1 will leave the saturation unchanged.  Other\nvalues are linear multipliers of the effect (and values over 1 are\npermitted).",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Vector#setVisible",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Vector#bindTo",
      "kind": "function",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an object with a\n`transform` method that you can use to provide `from` and `to`\nfunctions to transform values on the way from the source to the\ntarget and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Vector#get",
      "kind": "function",
      "description": "Gets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Vector#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Vector#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Vector#set",
      "kind": "function",
      "description": "Sets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Vector#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Vector#unbind",
      "kind": "function",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Vector#unbindAll",
      "kind": "function",
      "description": "Removes all bindings.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Vector#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Vector#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Vector#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Vector#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Vector#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Vector#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Heatmap#getStyle",
      "kind": "function",
      "description": "Get the style for features.  This returns whatever was passed to the `style`\noption at construction or to the `setStyle` method.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/vectorlayer.js",
      "provides": [
        "ol.layer.Vector"
      ]
    },
    {
      "name": "ol.layer.Heatmap#getStyleFunction",
      "kind": "function",
      "description": "Get the style function.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/vectorlayer.js",
      "provides": [
        "ol.layer.Vector"
      ]
    },
    {
      "name": "ol.layer.Heatmap#setStyle",
      "kind": "function",
      "description": "Set the style for features.  This can be a single style object, an array\nof styles, or a function that takes a feature and resolution and returns\nan array of styles.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/vectorlayer.js",
      "provides": [
        "ol.layer.Vector"
      ]
    },
    {
      "name": "ol.layer.Heatmap#getSource",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layer.js",
      "provides": [
        "ol.layer.Layer"
      ]
    },
    {
      "name": "ol.layer.Heatmap#getBrightness",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Heatmap#getContrast",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Heatmap#getHue",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Heatmap#getMaxResolution",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Heatmap#getMinResolution",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Heatmap#getOpacity",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Heatmap#getSaturation",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Heatmap#getVisible",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Heatmap#setBrightness",
      "kind": "function",
      "description": "Adjust the layer brightness.  A value of -1 will render the layer completely\nblack.  A value of 0 will leave the brightness unchanged.  A value of 1 will\nrender the layer completely white.  Other values are linear multipliers on\nthe effect (values are clamped between -1 and 1).\n\nThe filter effects draft [1] says the brightness function is supposed to\nrender 0 black, 1 unchanged, and all other values as a linear multiplier.\n\nThe current WebKit implementation clamps values between -1 (black) and 1\n(white) [2].  There is a bug open to change the filter effect spec [3].\n\nTODO: revisit this if the spec is still unmodified before we release\n\n[1] https://dvcs.w3.org/hg/FXTF/raw-file/tip/filters/index.html\n[2] https://github.com/WebKit/webkit/commit/8f4765e569\n[3] https://www.w3.org/Bugs/Public/show_bug.cgi?id=15647",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Heatmap#setContrast",
      "kind": "function",
      "description": "Adjust the layer contrast.  A value of 0 will render the layer completely\ngrey.  A value of 1 will leave the contrast unchanged.  Other values are\nlinear multipliers on the effect (and values over 1 are permitted).",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Heatmap#setHue",
      "kind": "function",
      "description": "Apply a hue-rotation to the layer.  A value of 0 will leave the hue\nunchanged.  Other values are radians around the color circle.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Heatmap#setMaxResolution",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Heatmap#setMinResolution",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Heatmap#setOpacity",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Heatmap#setSaturation",
      "kind": "function",
      "description": "Adjust layer saturation.  A value of 0 will render the layer completely\nunsaturated.  A value of 1 will leave the saturation unchanged.  Other\nvalues are linear multipliers of the effect (and values over 1 are\npermitted).",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Heatmap#setVisible",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Heatmap#bindTo",
      "kind": "function",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an object with a\n`transform` method that you can use to provide `from` and `to`\nfunctions to transform values on the way from the source to the\ntarget and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Heatmap#get",
      "kind": "function",
      "description": "Gets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Heatmap#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Heatmap#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Heatmap#set",
      "kind": "function",
      "description": "Sets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Heatmap#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Heatmap#unbind",
      "kind": "function",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Heatmap#unbindAll",
      "kind": "function",
      "description": "Removes all bindings.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Heatmap#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Heatmap#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Heatmap#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Heatmap#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Heatmap#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Heatmap#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Image#getSource",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layer.js",
      "provides": [
        "ol.layer.Layer"
      ]
    },
    {
      "name": "ol.layer.Image#getBrightness",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Image#getContrast",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Image#getHue",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Image#getMaxResolution",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Image#getMinResolution",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Image#getOpacity",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Image#getSaturation",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Image#getVisible",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Image#setBrightness",
      "kind": "function",
      "description": "Adjust the layer brightness.  A value of -1 will render the layer completely\nblack.  A value of 0 will leave the brightness unchanged.  A value of 1 will\nrender the layer completely white.  Other values are linear multipliers on\nthe effect (values are clamped between -1 and 1).\n\nThe filter effects draft [1] says the brightness function is supposed to\nrender 0 black, 1 unchanged, and all other values as a linear multiplier.\n\nThe current WebKit implementation clamps values between -1 (black) and 1\n(white) [2].  There is a bug open to change the filter effect spec [3].\n\nTODO: revisit this if the spec is still unmodified before we release\n\n[1] https://dvcs.w3.org/hg/FXTF/raw-file/tip/filters/index.html\n[2] https://github.com/WebKit/webkit/commit/8f4765e569\n[3] https://www.w3.org/Bugs/Public/show_bug.cgi?id=15647",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Image#setContrast",
      "kind": "function",
      "description": "Adjust the layer contrast.  A value of 0 will render the layer completely\ngrey.  A value of 1 will leave the contrast unchanged.  Other values are\nlinear multipliers on the effect (and values over 1 are permitted).",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Image#setHue",
      "kind": "function",
      "description": "Apply a hue-rotation to the layer.  A value of 0 will leave the hue\nunchanged.  Other values are radians around the color circle.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Image#setMaxResolution",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Image#setMinResolution",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Image#setOpacity",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Image#setSaturation",
      "kind": "function",
      "description": "Adjust layer saturation.  A value of 0 will render the layer completely\nunsaturated.  A value of 1 will leave the saturation unchanged.  Other\nvalues are linear multipliers of the effect (and values over 1 are\npermitted).",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Image#setVisible",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Image#bindTo",
      "kind": "function",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an object with a\n`transform` method that you can use to provide `from` and `to`\nfunctions to transform values on the way from the source to the\ntarget and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Image#get",
      "kind": "function",
      "description": "Gets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Image#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Image#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Image#set",
      "kind": "function",
      "description": "Sets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Image#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Image#unbind",
      "kind": "function",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Image#unbindAll",
      "kind": "function",
      "description": "Removes all bindings.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Image#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Image#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Image#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Image#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Image#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Image#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Group#getBrightness",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Group#getContrast",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Group#getHue",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Group#getMaxResolution",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Group#getMinResolution",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Group#getOpacity",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Group#getSaturation",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Group#getVisible",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Group#setBrightness",
      "kind": "function",
      "description": "Adjust the layer brightness.  A value of -1 will render the layer completely\nblack.  A value of 0 will leave the brightness unchanged.  A value of 1 will\nrender the layer completely white.  Other values are linear multipliers on\nthe effect (values are clamped between -1 and 1).\n\nThe filter effects draft [1] says the brightness function is supposed to\nrender 0 black, 1 unchanged, and all other values as a linear multiplier.\n\nThe current WebKit implementation clamps values between -1 (black) and 1\n(white) [2].  There is a bug open to change the filter effect spec [3].\n\nTODO: revisit this if the spec is still unmodified before we release\n\n[1] https://dvcs.w3.org/hg/FXTF/raw-file/tip/filters/index.html\n[2] https://github.com/WebKit/webkit/commit/8f4765e569\n[3] https://www.w3.org/Bugs/Public/show_bug.cgi?id=15647",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Group#setContrast",
      "kind": "function",
      "description": "Adjust the layer contrast.  A value of 0 will render the layer completely\ngrey.  A value of 1 will leave the contrast unchanged.  Other values are\nlinear multipliers on the effect (and values over 1 are permitted).",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Group#setHue",
      "kind": "function",
      "description": "Apply a hue-rotation to the layer.  A value of 0 will leave the hue\nunchanged.  Other values are radians around the color circle.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Group#setMaxResolution",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Group#setMinResolution",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Group#setOpacity",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Group#setSaturation",
      "kind": "function",
      "description": "Adjust layer saturation.  A value of 0 will render the layer completely\nunsaturated.  A value of 1 will leave the saturation unchanged.  Other\nvalues are linear multipliers of the effect (and values over 1 are\npermitted).",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Group#setVisible",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Group#bindTo",
      "kind": "function",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an object with a\n`transform` method that you can use to provide `from` and `to`\nfunctions to transform values on the way from the source to the\ntarget and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Group#get",
      "kind": "function",
      "description": "Gets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Group#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Group#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Group#set",
      "kind": "function",
      "description": "Sets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Group#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Group#unbind",
      "kind": "function",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Group#unbindAll",
      "kind": "function",
      "description": "Removes all bindings.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Group#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Group#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Group#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Group#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Group#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Group#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Tile#getSource",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layer.js",
      "provides": [
        "ol.layer.Layer"
      ]
    },
    {
      "name": "ol.layer.Tile#getBrightness",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Tile#getContrast",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Tile#getHue",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Tile#getMaxResolution",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Tile#getMinResolution",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Tile#getOpacity",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Tile#getSaturation",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Tile#getVisible",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Tile#setBrightness",
      "kind": "function",
      "description": "Adjust the layer brightness.  A value of -1 will render the layer completely\nblack.  A value of 0 will leave the brightness unchanged.  A value of 1 will\nrender the layer completely white.  Other values are linear multipliers on\nthe effect (values are clamped between -1 and 1).\n\nThe filter effects draft [1] says the brightness function is supposed to\nrender 0 black, 1 unchanged, and all other values as a linear multiplier.\n\nThe current WebKit implementation clamps values between -1 (black) and 1\n(white) [2].  There is a bug open to change the filter effect spec [3].\n\nTODO: revisit this if the spec is still unmodified before we release\n\n[1] https://dvcs.w3.org/hg/FXTF/raw-file/tip/filters/index.html\n[2] https://github.com/WebKit/webkit/commit/8f4765e569\n[3] https://www.w3.org/Bugs/Public/show_bug.cgi?id=15647",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Tile#setContrast",
      "kind": "function",
      "description": "Adjust the layer contrast.  A value of 0 will render the layer completely\ngrey.  A value of 1 will leave the contrast unchanged.  Other values are\nlinear multipliers on the effect (and values over 1 are permitted).",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Tile#setHue",
      "kind": "function",
      "description": "Apply a hue-rotation to the layer.  A value of 0 will leave the hue\nunchanged.  Other values are radians around the color circle.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Tile#setMaxResolution",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Tile#setMinResolution",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Tile#setOpacity",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Tile#setSaturation",
      "kind": "function",
      "description": "Adjust layer saturation.  A value of 0 will render the layer completely\nunsaturated.  A value of 1 will leave the saturation unchanged.  Other\nvalues are linear multipliers of the effect (and values over 1 are\npermitted).",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Tile#setVisible",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/layer/layerbase.js",
      "provides": [
        "ol.layer.Base",
        "ol.layer.LayerProperty",
        "ol.layer.LayerState"
      ]
    },
    {
      "name": "ol.layer.Tile#bindTo",
      "kind": "function",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an object with a\n`transform` method that you can use to provide `from` and `to`\nfunctions to transform values on the way from the source to the\ntarget and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Tile#get",
      "kind": "function",
      "description": "Gets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Tile#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Tile#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Tile#set",
      "kind": "function",
      "description": "Sets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Tile#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Tile#unbind",
      "kind": "function",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Tile#unbindAll",
      "kind": "function",
      "description": "Removes all bindings.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.layer.Tile#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Tile#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Tile#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Tile#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Tile#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.layer.Tile#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Interaction#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Interaction#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Interaction#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Interaction#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Interaction#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Interaction#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DoubleClickZoom#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DoubleClickZoom#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DoubleClickZoom#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DoubleClickZoom#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DoubleClickZoom#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DoubleClickZoom#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragAndDrop#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragAndDrop#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragAndDrop#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragAndDrop#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragAndDrop#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragAndDrop#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Pointer#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Pointer#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Pointer#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Pointer#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Pointer#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Pointer#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragBox#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragBox#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragBox#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragBox#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragBox#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragBox#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragPan#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragPan#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragPan#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragPan#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragPan#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragPan#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragRotateAndZoom#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragRotateAndZoom#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragRotateAndZoom#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragRotateAndZoom#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragRotateAndZoom#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragRotateAndZoom#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragRotate#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragRotate#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragRotate#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragRotate#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragRotate#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragRotate#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragZoom#getGeometry",
      "kind": "function",
      "description": "Returns geometry of last drawn box.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/interaction/dragboxinteraction.js",
      "provides": [
        "ol.DragBoxEvent",
        "ol.interaction.DragBox"
      ]
    },
    {
      "name": "ol.interaction.DragZoom#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragZoom#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragZoom#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragZoom#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragZoom#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.DragZoom#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Draw#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Draw#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Draw#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Draw#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Draw#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Draw#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.KeyboardPan#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.KeyboardPan#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.KeyboardPan#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.KeyboardPan#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.KeyboardPan#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.KeyboardPan#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.KeyboardZoom#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.KeyboardZoom#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.KeyboardZoom#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.KeyboardZoom#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.KeyboardZoom#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.KeyboardZoom#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Modify#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Modify#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Modify#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Modify#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Modify#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Modify#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.MouseWheelZoom#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.MouseWheelZoom#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.MouseWheelZoom#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.MouseWheelZoom#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.MouseWheelZoom#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.MouseWheelZoom#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.PinchRotate#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.PinchRotate#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.PinchRotate#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.PinchRotate#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.PinchRotate#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.PinchRotate#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.PinchZoom#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.PinchZoom#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.PinchZoom#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.PinchZoom#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.PinchZoom#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.PinchZoom#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Select#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Select#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Select#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Select#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Select#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.interaction.Select#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Geometry#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Geometry#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Geometry#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Geometry#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Geometry#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Geometry#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.SimpleGeometry#clone",
      "kind": "function",
      "description": "Make a complete copy of the geometry.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/geometry.js",
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.SimpleGeometry#getClosestPoint",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/geometry.js",
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.SimpleGeometry#getType",
      "kind": "function",
      "description": "Get the type of this geometry.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/geometry.js",
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.SimpleGeometry#transform",
      "kind": "function",
      "description": "Transform a geometry from one coordinate reference system to another.\nModifies the geometry in place.\nIf you do not want the geometry modified in place, first clone() it and\nthen use this function on the clone.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/geometry.js",
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.SimpleGeometry#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.SimpleGeometry#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.SimpleGeometry#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.SimpleGeometry#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.SimpleGeometry#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.SimpleGeometry#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Circle#getFirstCoordinate",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.Circle#getLastCoordinate",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.Circle#getLayout",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.Circle#getSimplifiedGeometry",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.Circle#getClosestPoint",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/geometry.js",
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.Circle#transform",
      "kind": "function",
      "description": "Transform a geometry from one coordinate reference system to another.\nModifies the geometry in place.\nIf you do not want the geometry modified in place, first clone() it and\nthen use this function on the clone.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/geometry.js",
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.Circle#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Circle#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Circle#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Circle#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Circle#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Circle#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.GeometryCollection#getClosestPoint",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/geometry.js",
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.GeometryCollection#transform",
      "kind": "function",
      "description": "Transform a geometry from one coordinate reference system to another.\nModifies the geometry in place.\nIf you do not want the geometry modified in place, first clone() it and\nthen use this function on the clone.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/geometry.js",
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.GeometryCollection#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.GeometryCollection#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.GeometryCollection#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.GeometryCollection#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.GeometryCollection#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.GeometryCollection#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.LinearRing#getExtent",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.LinearRing#getFirstCoordinate",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.LinearRing#getLastCoordinate",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.LinearRing#getLayout",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.LinearRing#getSimplifiedGeometry",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.LinearRing#getClosestPoint",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/geometry.js",
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.LinearRing#transform",
      "kind": "function",
      "description": "Transform a geometry from one coordinate reference system to another.\nModifies the geometry in place.\nIf you do not want the geometry modified in place, first clone() it and\nthen use this function on the clone.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/geometry.js",
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.LinearRing#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.LinearRing#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.LinearRing#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.LinearRing#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.LinearRing#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.LinearRing#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.LineString#getExtent",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.LineString#getFirstCoordinate",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.LineString#getLastCoordinate",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.LineString#getLayout",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.LineString#getSimplifiedGeometry",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.LineString#getClosestPoint",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/geometry.js",
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.LineString#transform",
      "kind": "function",
      "description": "Transform a geometry from one coordinate reference system to another.\nModifies the geometry in place.\nIf you do not want the geometry modified in place, first clone() it and\nthen use this function on the clone.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/geometry.js",
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.LineString#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.LineString#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.LineString#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.LineString#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.LineString#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.LineString#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#getExtent",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#getFirstCoordinate",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#getLastCoordinate",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#getLayout",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#getSimplifiedGeometry",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#getClosestPoint",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/geometry.js",
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#transform",
      "kind": "function",
      "description": "Transform a geometry from one coordinate reference system to another.\nModifies the geometry in place.\nIf you do not want the geometry modified in place, first clone() it and\nthen use this function on the clone.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/geometry.js",
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.MultiLineString#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#getExtent",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#getFirstCoordinate",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#getLastCoordinate",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#getLayout",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#getSimplifiedGeometry",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#getClosestPoint",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/geometry.js",
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#transform",
      "kind": "function",
      "description": "Transform a geometry from one coordinate reference system to another.\nModifies the geometry in place.\nIf you do not want the geometry modified in place, first clone() it and\nthen use this function on the clone.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/geometry.js",
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.MultiPoint#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#getExtent",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#getFirstCoordinate",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#getLastCoordinate",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#getLayout",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#getSimplifiedGeometry",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#getClosestPoint",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/geometry.js",
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#transform",
      "kind": "function",
      "description": "Transform a geometry from one coordinate reference system to another.\nModifies the geometry in place.\nIf you do not want the geometry modified in place, first clone() it and\nthen use this function on the clone.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/geometry.js",
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.MultiPolygon#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Point#getFirstCoordinate",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.Point#getLastCoordinate",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.Point#getLayout",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.Point#getSimplifiedGeometry",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.Point#getClosestPoint",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/geometry.js",
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.Point#transform",
      "kind": "function",
      "description": "Transform a geometry from one coordinate reference system to another.\nModifies the geometry in place.\nIf you do not want the geometry modified in place, first clone() it and\nthen use this function on the clone.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/geometry.js",
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.Point#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Point#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Point#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Point#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Point#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Point#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Polygon#getExtent",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.Polygon#getFirstCoordinate",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.Polygon#getLastCoordinate",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.Polygon#getLayout",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.Polygon#getSimplifiedGeometry",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/simplegeometry.js",
      "provides": [
        "ol.geom.SimpleGeometry"
      ]
    },
    {
      "name": "ol.geom.Polygon#getClosestPoint",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/geometry.js",
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.Polygon#transform",
      "kind": "function",
      "description": "Transform a geometry from one coordinate reference system to another.\nModifies the geometry in place.\nIf you do not want the geometry modified in place, first clone() it and\nthen use this function on the clone.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/geom/geometry.js",
      "provides": [
        "ol.geom.Geometry",
        "ol.geom.GeometryType"
      ]
    },
    {
      "name": "ol.geom.Polygon#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Polygon#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Polygon#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Polygon#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Polygon#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.geom.Polygon#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.format.GPX.V1_1#readFeature",
      "kind": "function",
      "description": "Read the first feature from a GPX source.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/gpxformat.js",
      "provides": [
        "ol.format.GPX",
        "ol.format.GPX.V1_1"
      ]
    },
    {
      "name": "ol.format.GPX.V1_1#readFeatures",
      "kind": "function",
      "description": "Read all features from a GPX source.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/gpxformat.js",
      "provides": [
        "ol.format.GPX",
        "ol.format.GPX.V1_1"
      ]
    },
    {
      "name": "ol.format.GPX.V1_1#readProjection",
      "kind": "function",
      "description": "Read the projection from a GPX source.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/gpxformat.js",
      "provides": [
        "ol.format.GPX",
        "ol.format.GPX.V1_1"
      ]
    },
    {
      "name": "ol.format.GPX.V1_1#writeFeatures",
      "kind": "function",
      "description": "Encode an array of features in the GPX format.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/format/gpxformat.js",
      "provides": [
        "ol.format.GPX",
        "ol.format.GPX.V1_1"
      ]
    },
    {
      "name": "ol.dom.Input#bindTo",
      "kind": "function",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an object with a\n`transform` method that you can use to provide `from` and `to`\nfunctions to transform values on the way from the source to the\ntarget and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.dom.Input#get",
      "kind": "function",
      "description": "Gets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.dom.Input#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.dom.Input#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.dom.Input#set",
      "kind": "function",
      "description": "Sets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.dom.Input#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.dom.Input#unbind",
      "kind": "function",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.dom.Input#unbindAll",
      "kind": "function",
      "description": "Removes all bindings.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.dom.Input#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.dom.Input#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.dom.Input#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.dom.Input#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.dom.Input#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.dom.Input#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Control#bindTo",
      "kind": "function",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an object with a\n`transform` method that you can use to provide `from` and `to`\nfunctions to transform values on the way from the source to the\ntarget and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Control#get",
      "kind": "function",
      "description": "Gets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Control#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Control#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Control#set",
      "kind": "function",
      "description": "Sets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Control#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Control#unbind",
      "kind": "function",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Control#unbindAll",
      "kind": "function",
      "description": "Removes all bindings.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Control#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Control#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Control#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Control#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Control#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Control#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Attribution#getMap",
      "kind": "function",
      "description": "Get the map associated with this control.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/control/control.js",
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.Attribution#setMap",
      "kind": "function",
      "description": "Remove the control from its current map and attach it to the new map.\nSubclasses may set up event handlers to get notified about changes to\nthe map here.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/control/control.js",
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.Attribution#bindTo",
      "kind": "function",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an object with a\n`transform` method that you can use to provide `from` and `to`\nfunctions to transform values on the way from the source to the\ntarget and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Attribution#get",
      "kind": "function",
      "description": "Gets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Attribution#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Attribution#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Attribution#set",
      "kind": "function",
      "description": "Sets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Attribution#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Attribution#unbind",
      "kind": "function",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Attribution#unbindAll",
      "kind": "function",
      "description": "Removes all bindings.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Attribution#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Attribution#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Attribution#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Attribution#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Attribution#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Attribution#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.FullScreen#getMap",
      "kind": "function",
      "description": "Get the map associated with this control.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/control/control.js",
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.FullScreen#setMap",
      "kind": "function",
      "description": "Remove the control from its current map and attach it to the new map.\nSubclasses may set up event handlers to get notified about changes to\nthe map here.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/control/control.js",
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.FullScreen#bindTo",
      "kind": "function",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an object with a\n`transform` method that you can use to provide `from` and `to`\nfunctions to transform values on the way from the source to the\ntarget and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.FullScreen#get",
      "kind": "function",
      "description": "Gets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.FullScreen#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.FullScreen#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.FullScreen#set",
      "kind": "function",
      "description": "Sets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.FullScreen#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.FullScreen#unbind",
      "kind": "function",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.FullScreen#unbindAll",
      "kind": "function",
      "description": "Removes all bindings.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.FullScreen#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.FullScreen#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.FullScreen#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.FullScreen#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.FullScreen#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.FullScreen#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.MousePosition#getMap",
      "kind": "function",
      "description": "Get the map associated with this control.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/control/control.js",
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.MousePosition#bindTo",
      "kind": "function",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an object with a\n`transform` method that you can use to provide `from` and `to`\nfunctions to transform values on the way from the source to the\ntarget and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.MousePosition#get",
      "kind": "function",
      "description": "Gets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.MousePosition#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.MousePosition#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.MousePosition#set",
      "kind": "function",
      "description": "Sets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.MousePosition#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.MousePosition#unbind",
      "kind": "function",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.MousePosition#unbindAll",
      "kind": "function",
      "description": "Removes all bindings.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.MousePosition#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.MousePosition#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.MousePosition#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.MousePosition#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.MousePosition#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.MousePosition#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Rotate#getMap",
      "kind": "function",
      "description": "Get the map associated with this control.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/control/control.js",
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.Rotate#setMap",
      "kind": "function",
      "description": "Remove the control from its current map and attach it to the new map.\nSubclasses may set up event handlers to get notified about changes to\nthe map here.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/control/control.js",
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.Rotate#bindTo",
      "kind": "function",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an object with a\n`transform` method that you can use to provide `from` and `to`\nfunctions to transform values on the way from the source to the\ntarget and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Rotate#get",
      "kind": "function",
      "description": "Gets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Rotate#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Rotate#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Rotate#set",
      "kind": "function",
      "description": "Sets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Rotate#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Rotate#unbind",
      "kind": "function",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Rotate#unbindAll",
      "kind": "function",
      "description": "Removes all bindings.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Rotate#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Rotate#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Rotate#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Rotate#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Rotate#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Rotate#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.ScaleLine#getMap",
      "kind": "function",
      "description": "Get the map associated with this control.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/control/control.js",
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.ScaleLine#setMap",
      "kind": "function",
      "description": "Remove the control from its current map and attach it to the new map.\nSubclasses may set up event handlers to get notified about changes to\nthe map here.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/control/control.js",
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.ScaleLine#bindTo",
      "kind": "function",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an object with a\n`transform` method that you can use to provide `from` and `to`\nfunctions to transform values on the way from the source to the\ntarget and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.ScaleLine#get",
      "kind": "function",
      "description": "Gets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.ScaleLine#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.ScaleLine#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.ScaleLine#set",
      "kind": "function",
      "description": "Sets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.ScaleLine#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.ScaleLine#unbind",
      "kind": "function",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.ScaleLine#unbindAll",
      "kind": "function",
      "description": "Removes all bindings.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.ScaleLine#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.ScaleLine#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.ScaleLine#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.ScaleLine#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.ScaleLine#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.ScaleLine#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Zoom#getMap",
      "kind": "function",
      "description": "Get the map associated with this control.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/control/control.js",
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.Zoom#setMap",
      "kind": "function",
      "description": "Remove the control from its current map and attach it to the new map.\nSubclasses may set up event handlers to get notified about changes to\nthe map here.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/control/control.js",
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.Zoom#bindTo",
      "kind": "function",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an object with a\n`transform` method that you can use to provide `from` and `to`\nfunctions to transform values on the way from the source to the\ntarget and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Zoom#get",
      "kind": "function",
      "description": "Gets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Zoom#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Zoom#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Zoom#set",
      "kind": "function",
      "description": "Sets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Zoom#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Zoom#unbind",
      "kind": "function",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Zoom#unbindAll",
      "kind": "function",
      "description": "Removes all bindings.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.Zoom#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Zoom#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Zoom#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Zoom#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Zoom#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.Zoom#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.ZoomSlider#getMap",
      "kind": "function",
      "description": "Get the map associated with this control.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/control/control.js",
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.ZoomSlider#bindTo",
      "kind": "function",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an object with a\n`transform` method that you can use to provide `from` and `to`\nfunctions to transform values on the way from the source to the\ntarget and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.ZoomSlider#get",
      "kind": "function",
      "description": "Gets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.ZoomSlider#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.ZoomSlider#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.ZoomSlider#set",
      "kind": "function",
      "description": "Sets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.ZoomSlider#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.ZoomSlider#unbind",
      "kind": "function",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.ZoomSlider#unbindAll",
      "kind": "function",
      "description": "Removes all bindings.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.ZoomSlider#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.ZoomSlider#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.ZoomSlider#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.ZoomSlider#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.ZoomSlider#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.ZoomSlider#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.ZoomToExtent#getMap",
      "kind": "function",
      "description": "Get the map associated with this control.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/control/control.js",
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.ZoomToExtent#setMap",
      "kind": "function",
      "description": "Remove the control from its current map and attach it to the new map.\nSubclasses may set up event handlers to get notified about changes to\nthe map here.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/control/control.js",
      "provides": [
        "ol.control.Control"
      ]
    },
    {
      "name": "ol.control.ZoomToExtent#bindTo",
      "kind": "function",
      "description": "The bindTo method allows you to set up a two-way binding between a\n`source` and `target` object. The method returns an object with a\n`transform` method that you can use to provide `from` and `to`\nfunctions to transform values on the way from the source to the\ntarget and on the way back.\n\nFor example, if you had two map views (sourceView and targetView)\nand you wanted the target view to have double the resolution of the\nsource view, you could transform the resolution on the way to and\nfrom the target with the following:\n\n    sourceView.bindTo('resolution', targetView)\n      .transform(\n        function(sourceResolution) {\n          // from sourceView.resolution to targetView.resolution\n          return 2 * sourceResolution;\n        },\n        function(targetResolution) {\n          // from targetView.resolution to sourceView.resolution\n          return targetResolution / 2;\n        }\n      );",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.ZoomToExtent#get",
      "kind": "function",
      "description": "Gets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.ZoomToExtent#getKeys",
      "kind": "function",
      "description": "Get a list of object property names.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.ZoomToExtent#getProperties",
      "kind": "function",
      "description": "Get an object of all property names and values.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.ZoomToExtent#set",
      "kind": "function",
      "description": "Sets a value.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.ZoomToExtent#setProperties",
      "kind": "function",
      "description": "Sets a collection of key-value pairs.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.ZoomToExtent#unbind",
      "kind": "function",
      "description": "Removes a binding. Unbinding will set the unbound property to the current\n    value. The object will not be notified, as the value has not changed.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.ZoomToExtent#unbindAll",
      "kind": "function",
      "description": "Removes all bindings.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/object.js",
      "provides": [
        "ol.Object",
        "ol.ObjectEvent",
        "ol.ObjectEventType"
      ]
    },
    {
      "name": "ol.control.ZoomToExtent#dispatchChangeEvent",
      "kind": "function",
      "description": "Dispatches a `change` event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.ZoomToExtent#getRevision",
      "kind": "function",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.ZoomToExtent#on",
      "kind": "function",
      "description": "Listen for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.ZoomToExtent#once",
      "kind": "function",
      "description": "Listen once for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.ZoomToExtent#un",
      "kind": "function",
      "description": "Unlisten for a certain type of event.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    },
    {
      "name": "ol.control.ZoomToExtent#unByKey",
      "kind": "function",
      "description": "Removes an event listener using the key returned by `on()` or `once()`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/observable.js",
      "provides": [
        "ol.Observable"
      ]
    }
  ],
  "defines": [
    {
      "name": "ol.ASSUME_TOUCH",
      "description": "Assume touch.  Default is `false`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/ol.js",
      "default": false
    },
    {
      "name": "ol.ENABLE_CANVAS",
      "description": "Enable the Canvas renderer.  Default is `true`. Setting\n    this to false at compile time in advanced mode removes all code\n    supporting the Canvas renderer from the build.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/ol.js",
      "default": true
    },
    {
      "name": "ol.ENABLE_DOM",
      "description": "Enable the DOM renderer (used as a fallback where Canvas is\n    not available).  Default is `true`. Setting this to false at compile time\n    in advanced mode removes all code supporting the DOM renderer from the\n    build.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/ol.js",
      "default": true
    },
    {
      "name": "ol.ENABLE_IMAGE",
      "description": "Enable rendering of ol.layer.Image based layers.  Default\n    is `true`. Setting this to false at compile time in advanced mode removes\n    all code supporting Image layers from the build.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/ol.js",
      "default": true
    },
    {
      "name": "ol.ENABLE_NAMED_COLORS",
      "description": "Enable named colors.  Enabling named colors adds about 3KB\n    uncompressed / 1.5KB compressed to the final build size.  Default is\n    `false`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/ol.js",
      "default": false
    },
    {
      "name": "ol.ENABLE_PROJ4JS",
      "description": "Enable integration with the Proj4js library.  Default is\n    `true`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/ol.js",
      "default": true
    },
    {
      "name": "ol.ENABLE_TILE",
      "description": "Enable rendering of ol.layer.Tile based layers.  Default is\n    `true`. Setting this to false at compile time in advanced mode removes\n    all code supporting Tile layers from the build.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/ol.js",
      "default": true
    },
    {
      "name": "ol.ENABLE_VECTOR",
      "description": "Enable rendering of ol.layer.Vector based layers.  Default\n    is `true`. Setting this to false at compile time in advanced mode removes\n    all code supporting Vector layers from the build.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/ol.js",
      "default": true
    },
    {
      "name": "ol.ENABLE_WEBGL",
      "description": "Enable the WebGL renderer.  Default is `true`. Setting\n    this to false at compile time in advanced mode removes all code\n    supporting the WebGL renderer from the build.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/ol.js",
      "default": true
    },
    {
      "name": "ol.LEGACY_IE_SUPPORT",
      "description": "Support legacy IE (7-8).  Default is `false`.",
      "path": "/home/nd0ut/workspace/ol3/src/ol/ol.js",
      "default": false
    }
  ]
}